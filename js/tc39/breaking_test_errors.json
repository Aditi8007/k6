{
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 4:3 Unexpected token > (and 3 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js: SyntaxError: SyntaxError: <eval>: Line 2:1 Unexpected token -- (and 5 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 3:1 Unexpected token < (and 2 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js-strict:true": "test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js: SyntaxError: SyntaxError: <eval>: Line 1:21 Unexpected token < (and 5 more errors) <at omitted>",
  "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js-strict:true": "test/annexB/built-ins/Function/createdynfn-no-line-terminator-html-close-comment-body.js: SyntaxError: SyntaxError: <eval>: Line 3:3 Unexpected token > (and 3 more errors) <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-control-escape-russian-letter.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-control-escape-russian-letter.js: Test262Error: invalid \\c escape matched c rather than \\c when followed by А Expected SameValue(«cА», «null») to be true <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-invalid-control-escape-character-class.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-invalid-control-escape-character-class.js: Test262Error: Character \\ missing from character class [\\c\u0000] <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-leading-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true <at omitted>",
  "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js-strict:true": "test/annexB/built-ins/RegExp/RegExp-trailing-escape-BMP.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true <at omitted>",
  "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js-strict:true": "test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js: Test262Error: invalid pattern: { Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/AsyncArrowFunction/is-a-constructor.js-strict:true": "test/built-ins/AsyncArrowFunction/is-a-constructor.js: SyntaxError: harness/hidden-constructors.js: Unexpected token (16:65)\n  14 | var AsyncArrowFunction = Object.getPrototypeOf(async () => {}).constructor;\n  15 | var AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n> 16 | var AsyncGeneratorFunction = Object.getPrototypeOf(async function* () {}).constructor;\n     |                                                                  ^\n  17 | var GeneratorFunction = Object.getPrototypeOf(function* () {}).constructor;\n  18 |  <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunction-construct.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunction-construct.js: SyntaxError: SyntaxError: <eval>: Line 3:7 Unexpected number <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunction-is-subclass.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunction-is-subclass.js: Test262Error: Prototype of constructor is Function Expected SameValue(«function () { [native code] }», «function Function() { [native code] }») to be true <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunction-name.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunction-name.js: Test262Error: Expected SameValue(«Function», «AsyncFunction») to be true <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunctionPrototype-is-not-callable.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunctionPrototype-is-not-callable.js: Test262Error: Expected SameValue(«function», «object») to be true <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunctionPrototype-prototype.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunctionPrototype-prototype.js: Test262Error: Expected SameValue(«[object Object]», «function () { [native code] }») to be true <at omitted>",
  "test/built-ins/AsyncFunction/AsyncFunctionPrototype-to-string.js-strict:true": "test/built-ins/AsyncFunction/AsyncFunctionPrototype-to-string.js: Test262Error: toStringTag value Expected SameValue(«undefined», «AsyncFunction») to be true <at omitted>",
  "test/built-ins/AsyncFunction/instance-construct-throws.js-strict:true": "test/built-ins/AsyncFunction/instance-construct-throws.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/AsyncFunction/instance-prototype-property.js-strict:true": "test/built-ins/AsyncFunction/instance-prototype-property.js: Test262Error: foo.prototype should be undefined Expected SameValue(«[object Object]», «undefined») to be true <at omitted>",
  "test/built-ins/AsyncFunction/is-a-constructor.js-strict:true": "test/built-ins/AsyncFunction/is-a-constructor.js: SyntaxError: harness/hidden-constructors.js: Unexpected token (16:65)\n  14 | var AsyncArrowFunction = Object.getPrototypeOf(async () => {}).constructor;\n  15 | var AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n> 16 | var AsyncGeneratorFunction = Object.getPrototypeOf(async function* () {}).constructor;\n     |                                                                  ^\n  17 | var GeneratorFunction = Object.getPrototypeOf(function* () {}).constructor;\n  18 |  <at omitted>",
  "test/built-ins/Date/UTC/fp-evaluation-order.js-strict:true": "test/built-ins/Date/UTC/fp-evaluation-order.js: Test262Error: order of operations / precision in MakeTime Expected SameValue(«29256», «29312») to be true <at omitted>",
  "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js-strict:true": "test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/Function/prototype/toString/AsyncFunction.js-strict:true": "test/built-ins/Function/prototype/toString/AsyncFunction.js: Test262Error: Conforms to NativeFunction Syntax: \"function anonymous(a, /* a */ b, c /* b */ //\\n) {\\n/* c */ ; /* d */ //\\n}\" (async function anonymous(a, /* a */ b, c /* b */ //\n) {\n/* c */ ; /* d */ //\n}) <at omitted>",
  "test/built-ins/Function/prototype/toString/GeneratorFunction.js-strict:true": "test/built-ins/Function/prototype/toString/GeneratorFunction.js: Test262Error: Conforms to NativeFunction Syntax: \"undefined\" (function* anonymous(a, /* a */ b, c /* b */ //\n) {\n/* c */ yield yield; /* d */ //\n}) <at omitted>",
  "test/built-ins/GeneratorFunction/has-instance.js-strict:true": "test/built-ins/GeneratorFunction/has-instance.js: Test262Error: Generators created via function invocation of GeneratorFunction are proper instances of GeneratorFunction <at omitted>",
  "test/built-ins/GeneratorFunction/instance-length.js-strict:true": "test/built-ins/GeneratorFunction/instance-length.js: TypeError: Cannot read property 'length' of undefined <at omitted>",
  "test/built-ins/GeneratorFunction/instance-name.js-strict:true": "test/built-ins/GeneratorFunction/instance-name.js: TypeError: Cannot read property 'name' of undefined <at omitted>",
  "test/built-ins/GeneratorFunction/instance-prototype.js-strict:true": "test/built-ins/GeneratorFunction/instance-prototype.js: TypeError: Cannot read property 'prototype' of undefined <at omitted>",
  "test/built-ins/GeneratorFunction/instance-yield-expr-in-param.js-strict:true": "test/built-ins/GeneratorFunction/instance-yield-expr-in-param.js: Test262Error: YieldExpression not permitted generally Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/GeneratorFunction/invoked-as-constructor-no-arguments.js-strict:true": "test/built-ins/GeneratorFunction/invoked-as-constructor-no-arguments.js: TypeError: Function.prototype.toString requires that 'this' be a Function <at omitted>",
  "test/built-ins/GeneratorFunction/invoked-as-function-multiple-arguments.js-strict:true": "test/built-ins/GeneratorFunction/invoked-as-function-multiple-arguments.js: TypeError: Value is not an object: undefined <at omitted>",
  "test/built-ins/GeneratorFunction/invoked-as-function-no-arguments.js-strict:true": "test/built-ins/GeneratorFunction/invoked-as-function-no-arguments.js: TypeError: Value is not an object: undefined <at omitted>",
  "test/built-ins/GeneratorFunction/invoked-as-function-single-argument.js-strict:true": "test/built-ins/GeneratorFunction/invoked-as-function-single-argument.js: TypeError: Value is not an object: undefined <at omitted>",
  "test/built-ins/GeneratorFunction/is-a-constructor.js-strict:true": "test/built-ins/GeneratorFunction/is-a-constructor.js: SyntaxError: harness/hidden-constructors.js: Unexpected token (16:65)\n  14 | var AsyncArrowFunction = Object.getPrototypeOf(async () => {}).constructor;\n  15 | var AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n> 16 | var AsyncGeneratorFunction = Object.getPrototypeOf(async function* () {}).constructor;\n     |                                                                  ^\n  17 | var GeneratorFunction = Object.getPrototypeOf(function* () {}).constructor;\n  18 |  <at omitted>",
  "test/built-ins/GeneratorFunction/length.js-strict:true": "test/built-ins/GeneratorFunction/length.js: Test262Error: Expected SameValue(«0», «1») to be true <at omitted>",
  "test/built-ins/GeneratorFunction/prototype/Symbol.toStringTag.js-strict:true": "test/built-ins/GeneratorFunction/prototype/Symbol.toStringTag.js: Test262Error: Expected obj[Symbol(Symbol.toStringTag)] to have enumerable:false. <at omitted>",
  "test/built-ins/GeneratorFunction/prototype/not-callable.js-strict:true": "test/built-ins/GeneratorFunction/prototype/not-callable.js: Test262Error: Expected SameValue(«function», «object») to be true <at omitted>",
  "test/built-ins/GeneratorFunction/prototype/prop-desc.js-strict:true": "test/built-ins/GeneratorFunction/prototype/prop-desc.js: Test262Error: Expected obj[prototype] to have writable:false. <at omitted>",
  "test/built-ins/GeneratorFunction/prototype/prototype.js-strict:true": "test/built-ins/GeneratorFunction/prototype/prototype.js: Test262Error: Expected obj[prototype] to have writable:false. <at omitted>",
  "test/built-ins/GeneratorPrototype/Symbol.toStringTag.js-strict:true": "test/built-ins/GeneratorPrototype/Symbol.toStringTag.js: Test262Error: Expected obj[Symbol(Symbol.toStringTag)] to have enumerable:false. <at omitted>",
  "test/built-ins/GeneratorPrototype/next/from-state-executing.js-strict:true": "test/built-ins/GeneratorPrototype/next/from-state-executing.js: Test262Error: Error when invoked without value Expected a TypeError but got a Error <at omitted>",
  "test/built-ins/GeneratorPrototype/next/name.js-strict:true": "test/built-ins/GeneratorPrototype/next/name.js: Test262Error: Expected SameValue(«», «next») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/next/not-a-constructor.js-strict:true": "test/built-ins/GeneratorPrototype/next/not-a-constructor.js: Test262Error: isConstructor(Object.getPrototypeOf((function* g() {}).prototype).next) must return false Expected SameValue(«true», «false») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/next/property-descriptor.js-strict:true": "test/built-ins/GeneratorPrototype/next/property-descriptor.js: Test262Error: Expected obj[next] to have enumerable:false. <at omitted>",
  "test/built-ins/GeneratorPrototype/return/from-state-completed.js-strict:true": "test/built-ins/GeneratorPrototype/return/from-state-completed.js: Test262Error: return: result `value` Expected SameValue(«undefined», «33») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/return/from-state-executing.js-strict:true": "test/built-ins/GeneratorPrototype/return/from-state-executing.js: Test262Error: Expected a TypeError but got a Error <at omitted>",
  "test/built-ins/GeneratorPrototype/return/name.js-strict:true": "test/built-ins/GeneratorPrototype/return/name.js: Test262Error: Expected SameValue(«», «return») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/return/not-a-constructor.js-strict:true": "test/built-ins/GeneratorPrototype/return/not-a-constructor.js: Test262Error: isConstructor(Object.getPrototypeOf((function* g() {}).prototype).return) must return false Expected SameValue(«true», «false») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/return/property-descriptor.js-strict:true": "test/built-ins/GeneratorPrototype/return/property-descriptor.js: Test262Error: Expected obj[return] to have enumerable:false. <at omitted>",
  "test/built-ins/GeneratorPrototype/throw/from-state-executing.js-strict:true": "test/built-ins/GeneratorPrototype/throw/from-state-executing.js: Test262Error: Expected a TypeError but got a Error <at omitted>",
  "test/built-ins/GeneratorPrototype/throw/name.js-strict:true": "test/built-ins/GeneratorPrototype/throw/name.js: Test262Error: Expected SameValue(«», «throw») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/throw/not-a-constructor.js-strict:true": "test/built-ins/GeneratorPrototype/throw/not-a-constructor.js: Test262Error: isConstructor(Object.getPrototypeOf((function* g() {}).prototype).throw) must return false Expected SameValue(«true», «false») to be true <at omitted>",
  "test/built-ins/GeneratorPrototype/throw/property-descriptor.js-strict:true": "test/built-ins/GeneratorPrototype/throw/property-descriptor.js: Test262Error: Expected obj[throw] to have enumerable:false. <at omitted>",
  "test/built-ins/Object/prototype/toString/proxy-function-async.js-strict:true": "test/built-ins/Object/prototype/toString/proxy-function-async.js: Test262Error: async function proxy Expected SameValue(«[object Function]», «[object AsyncFunction]») to be true <at omitted>",
  "test/built-ins/Object/prototype/toString/proxy-function.js-strict:true": "test/built-ins/Object/prototype/toString/proxy-function.js: Test262Error: async function proxy Expected SameValue(«[object Function]», «[object AsyncFunction]») to be true <at omitted>",
  "test/built-ins/Object/prototype/toString/symbol-tag-non-str-builtin.js-strict:true": "test/built-ins/Object/prototype/toString/symbol-tag-non-str-builtin.js: Test262Error: Expected SameValue(«[object Symbol]», «[object Object]») to be true <at omitted>",
  "test/built-ins/Object/seal/seal-asyncgeneratorfunction.js-strict:true": "test/built-ins/Object/seal/seal-asyncgeneratorfunction.js: SyntaxError: test/built-ins/Object/seal/seal-asyncgeneratorfunction.js: Unexpected token (37:54)\n  35 | ---*/\n  36 | \n> 37 | Object.seal(new (Object.getPrototypeOf(async function * () {}).constructor)());\n     |                                                       ^\n  38 |  <at omitted>",
  "test/built-ins/Object/seal/seal-bigint64array.js-strict:true": "test/built-ins/Object/seal/seal-bigint64array.js: ReferenceError: BigInt64Array is not defined <at omitted>",
  "test/built-ins/Object/seal/seal-biguint64array.js-strict:true": "test/built-ins/Object/seal/seal-biguint64array.js: ReferenceError: BigUint64Array is not defined <at omitted>",
  "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js-strict:true": "test/built-ins/Proxy/preventExtensions/trap-is-undefined-target-is-proxy.js: ReferenceError: require is not defined <at omitted>",
  "test/built-ins/RegExp/quantifier-integer-limit.js-strict:true": "test/built-ins/RegExp/quantifier-integer-limit.js: SyntaxError: Invalid regular expression (re2): b{9007199254740991} (error parsing regexp: invalid repeat count: `{9007199254740991}`) <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_brackets.js-strict:true": "test/built-ins/RegExp/unicode_restricted_brackets.js: Test262Error: RegExp(\"]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_character_class_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_character_class_escape.js: Test262Error: RegExp(\"[\\d-a]\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape.js: Test262Error: Invalid IdentityEscape in AtomEscape: '\\\u0000' Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js: Test262Error: IdentityEscape in AtomEscape: 'A' Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_c.js: Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_u.js: Test262Error: RegExp(\"\\u\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js-strict:true": "test/built-ins/RegExp/unicode_restricted_identity_escape_x.js: Test262Error: RegExp(\"\\x\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js-strict:true": "test/built-ins/RegExp/unicode_restricted_incomplete_quantifier.js: Test262Error: RegExp(\"a{\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_octal_escape.js-strict:true": "test/built-ins/RegExp/unicode_restricted_octal_escape.js: Test262Error: RegExp(\"\\1\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js-strict:true": "test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js: Test262Error: RegExp(\"(?=.)*\", \"u\"):  Expected a SyntaxError to be thrown but no exception was thrown at all <at omitted>",
  "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js-strict:true": "test/built-ins/TypedArrayConstructors/BigUint64Array/is-a-constructor.js: ReferenceError: BigUint64Array is not defined <at omitted>",
  "test/harness/isConstructor.js-strict:true": "test/harness/isConstructor.js: Test262Error: Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/comments/hashbang/function-constructor.js-strict:true": "test/language/comments/hashbang/function-constructor.js: SyntaxError: test/language/comments/hashbang/function-constructor.js: Unexpected token (17:47)\n  15 | const AsyncFunction = (async function (){}).constructor;\n  16 | const GeneratorFunction = (function *(){}).constructor;\n> 17 | const AsyncGeneratorFunction = (async function *(){}).constructor;\n     |                                                ^\n  18 | for (const ctor of [\n  19 |   Function,\n  20 |   AsyncFunction, <at omitted>",
  "test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js-strict:true": "test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js: SyntaxError: test/language/destructuring/binding/syntax/destructuring-array-parameters-function-arguments-length.js: Unexpected token (35:33)\n  33 | assert.sameValue((async ([a,b]) => {}).length, 1);\n  34 | assert.sameValue((async function([a,b]) {}).length, 1);\n> 35 | assert.sameValue((async function * ([a,b]) {}).length, 1);\n     |                                  ^\n  36 | \n  37 |  <at omitted>",
  "test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js-strict:true": "test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js: SyntaxError: test/language/destructuring/binding/syntax/destructuring-object-parameters-function-arguments-length.js: Unexpected token (35:33)\n  33 | assert.sameValue((async ({a,b}) => {}).length, 1);\n  34 | assert.sameValue((async function({a,b}) {}).length, 1);\n> 35 | assert.sameValue((async function * ({a,b}) {}).length, 1);\n     |                                  ^\n  36 | \n  37 |  <at omitted>",
  "test/language/eval-code/indirect/non-definable-global-generator.js-strict:true": "test/language/eval-code/indirect/non-definable-global-generator.js: Test262Error: Expected a TypeError but got a SyntaxError <at omitted>",
  "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/arrow-function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/arrow-function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/arrow-function/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/arrow-function/static-init-await-binding.js-strict:true": "test/language/expressions/arrow-function/static-init-await-binding.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/arrow-function/static-init-await-reference.js-strict:true": "test/language/expressions/arrow-function/static-init-await-reference.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-elem-init-fn-name-gen.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-init-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-init-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-elem-init-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-err.js: Error: test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-err.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-null.js: Error: test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-null.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close.js: Error: test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-nested-array-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-nested-array-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-elem-nested-array-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-target-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-target-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-elem-target-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-err.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-err.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-null.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-null.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close.js-strict:true": "test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close.js: Error: test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-before-elision.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-err.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-err.js: Error: test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-err.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-null.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-null.js: Error: test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-null.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close.js: Error: test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-nested-array-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-array-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-rest-nested-array-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-expr.js: SyntaxError: test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-expr.js: Unexpected token (26:13)\n  24 | var vals = [{}];\n  25 | \n> 26 | result = [...{ x = yield }] = vals;\n     |              ^\n  27 | \n  28 | \n  29 |  <at omitted>",
  "test/language/expressions/assignment/dstr/array-rest-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/array-rest-yield-expr.js: Error: test/language/expressions/assignment/dstr/array-rest-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/obj-id-init-fn-name-gen.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/expressions/assignment/dstr/obj-id-init-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/obj-id-init-yield-expr.js: Error: test/language/expressions/assignment/dstr/obj-id-init-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-gen.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-expr.js: Error: test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-expr.js: Error: test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-expr.js: Error: test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-expr.js-strict:true": "test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-expr.js: Error: test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-expr.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/assignment/fn-name-gen.js-strict:true": "test/language/expressions/assignment/fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/assignment/fn-name-lhs-cover.js-strict:true": "test/language/expressions/assignment/fn-name-lhs-cover.js: Test262Error: descriptor value should be  <at omitted>",
  "test/language/expressions/assignment/target-assignment-inside-function.js-strict:true": "test/language/expressions/assignment/target-assignment-inside-function.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignment/target-assignment.js-strict:true": "test/language/expressions/assignment/target-assignment.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js-strict:true": "test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/async-arrow-function/dflt-params-abrupt.js-strict:true": "test/language/expressions/async-arrow-function/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/async-arrow-function/dflt-params-ref-later.js-strict:true": "test/language/expressions/async-arrow-function/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-arrow-function/dflt-params-ref-self.js-strict:true": "test/language/expressions/async-arrow-function/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-arrow-function/escaped-async.js-strict:true": "test/language/expressions/async-arrow-function/escaped-async.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/async-arrow-function/rest-params-trailing-comma-early-error.js-strict:true": "test/language/expressions/async-arrow-function/rest-params-trailing-comma-early-error.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/async-function/escaped-async.js-strict:true": "test/language/expressions/async-function/escaped-async.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/async-function/named-dflt-params-abrupt.js-strict:true": "test/language/expressions/async-function/named-dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/async-function/named-dflt-params-ref-later.js-strict:true": "test/language/expressions/async-function/named-dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-function/named-dflt-params-ref-self.js-strict:true": "test/language/expressions/async-function/named-dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-function/nameless-dflt-params-abrupt.js-strict:true": "test/language/expressions/async-function/nameless-dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/async-function/nameless-dflt-params-ref-later.js-strict:true": "test/language/expressions/async-function/nameless-dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-function/nameless-dflt-params-ref-self.js-strict:true": "test/language/expressions/async-function/nameless-dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/async-generator/name.js-strict:true": "test/language/expressions/async-generator/name.js: SyntaxError: test/language/expressions/async-generator/name.js: Unexpected token (31:29)\n  29 | ---*/\n  30 | \n> 31 | verifyProperty(async function*() {}, \"name\", {\n     |                              ^\n  32 |   value: \"\", writable: false, enumerable: false, configurable: true\n  33 | });\n  34 |  <at omitted>",
  "test/language/expressions/await/await-BindingIdentifier-in-global.js-strict:true": "test/language/expressions/await/await-BindingIdentifier-in-global.js: SyntaxError:  test/language/expressions/await/await-BindingIdentifier-in-global.js: await can be used only inside an async function (12:15)\n  10 | ---*/\n  11 | \n> 12 | async function await() { return 1 }\n     |                ^\n  13 | assert(await instanceof Function);\n  14 | \n  15 |  <at omitted>",
  "test/language/expressions/await/await-in-generator.js-strict:true": "test/language/expressions/await/await-in-generator.js: SyntaxError:  test/language/expressions/await/await-in-generator.js: await can be used only inside an async function (13:29)\n  11 | ---*/\n  12 | \n> 13 | function* foo(await) { yield await; };\n     |                              ^\n  14 | assert.sameValue(foo(1).next().value, 1);\n  15 |  <at omitted>",
  "test/language/expressions/await/await-in-nested-function.js-strict:true": "test/language/expressions/await/await-in-nested-function.js: SyntaxError:  test/language/expressions/await/await-in-nested-function.js: await can be used only inside an async function (12:4)\n  10 | ---*/\n  11 | \n> 12 | var await;\n     |     ^\n  13 | async function foo() {\n  14 |   function bar() {\n  15 |     await = 1; <at omitted>",
  "test/language/expressions/await/await-in-nested-generator.js-strict:true": "test/language/expressions/await/await-in-nested-generator.js: SyntaxError:  test/language/expressions/await/await-in-nested-generator.js: await can be used only inside an async function (13:4)\n  11 | ---*/\n  12 | \n> 13 | var await;\n     |     ^\n  14 | async function foo() {\n  15 |   function* bar() {\n  16 |     await = 1; <at omitted>",
  "test/language/expressions/class/accessor-name-inst-computed-yield-expr.js-strict:true": "test/language/expressions/class/accessor-name-inst-computed-yield-expr.js: Error: test/language/expressions/class/accessor-name-inst-computed-yield-expr.js: unknown Expression of type \"ClassExpression\" <at omitted>",
  "test/language/expressions/class/accessor-name-static-computed-yield-expr.js-strict:true": "test/language/expressions/class/accessor-name-static-computed-yield-expr.js: Error: test/language/expressions/class/accessor-name-static-computed-yield-expr.js: unknown Expression of type \"ClassExpression\" <at omitted>",
  "test/language/expressions/class/async-method-static/dflt-params-abrupt.js-strict:true": "test/language/expressions/class/async-method-static/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/class/async-method-static/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/async-method-static/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/class/async-method-static/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/async-method-static/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/class/async-method/dflt-params-abrupt.js-strict:true": "test/language/expressions/class/async-method/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/class/async-method/dflt-params-ref-later.js-strict:true": "test/language/expressions/class/async-method/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/class/async-method/dflt-params-ref-self.js-strict:true": "test/language/expressions/class/async-method/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/class/class-name-ident-await-escaped-module.js-strict:true": "test/language/expressions/class/class-name-ident-await-escaped-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/class-name-ident-await-module.js-strict:true": "test/language/expressions/class/class-name-ident-await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | let C = class {\n> 40 |   get [1_2_3_4_5_6_7_8]() {\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js: Error: test/language/expressions/class/cpn-class-expr-accessors-computed-property-name-from-yield-expression.js: unknown Expression of type \"ClassExpression\" <at omitted>",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n> 40 |   [1_2_3_4_5_6_7_8]() {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |   static [1_2_3_4_5_6_7_8]() { <at omitted>",
  "test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js: Error: test/language/expressions/class/cpn-class-expr-computed-property-name-from-yield-expression.js: unknown Expression of type \"ClassExpression\" <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n> 40 |   [async () => {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () => {}] = 1;\n  43 | }; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n> 41 |   [g()] = 1;\n     |         ^\n  42 | \n  43 |   static [g()] = 1;\n  44 | }; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n> 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | }; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n> 41 |   [yield 9] = 9;\n     |             ^\n  42 | \n  43 |   static [yield 9] = 9;\n  44 | }; <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n> 40 |   [async () => {}] = () => {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n> 41 |   [g()] = () => {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n> 40 |   [1_2_3_4_5_6_7_8] = () => {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   };\n  43 |  <at omitted>",
  "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js: SyntaxError: test/language/expressions/class/cpn-class-expr-fields-methods-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n> 41 |   [yield 9] = () => {\n     |             ^\n  42 |     return 9;\n  43 |   };\n  44 |  <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-elision.js: Unexpected token (104:13)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   method([...[,]]) {\n      |              ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/meth-ary-ptrn-rest-ary-empty.js: Unexpected token (88:13)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   method([...[]]) {\n     |              ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (104:13)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   method([...[,]] = g()) {\n      |              ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (88:13)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   method([...[]] = iter) {\n     |              ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js: Unexpected token (104:20)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   static method([...[,]]) {\n      |                     ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js: Unexpected token (88:20)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   static method([...[]]) {\n     |                     ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (104:20)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   static method([...[,]] = g()) {\n      |                     ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (88:20)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   static method([...[]] = iter) {\n     |                     ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/meth-static-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n> 84 |   #method([[,] = g()]) {\n     |   ^\n  85 |     assert.sameValue(first, 1);\n  86 |     assert.sameValue(second, 0);\n  87 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (82:2)\n  80 | var callCount = 0;\n  81 | var C = class {\n> 82 |   #method([[,] = g()]) {\n     |   ^\n  83 |     assert.sameValue(callCount, 0);\n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class {\n> 80 |   #method([[] = function() { initCount += 1; return iter; }()]) {\n     |   ^\n  81 |     assert.sameValue(initCount, 1);\n  82 |     assert.sameValue(iterCount, 0);\n  83 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class {\n> 79 |   #method([gen = function* () {}, xGen = function* x() {}]) {\n     |   ^\n  80 |     assert.sameValue(gen.name, 'gen');\n  81 |     assert.notSameValue(xGen.name, 'xGen');\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (94:2)\n  92 | var callCount = 0;\n  93 | var C = class {\n> 94 |   #method([x, y, z]) {\n     |   ^\n  95 |     assert.sameValue(x, 1);\n  96 |     assert.sameValue(y, 2);\n  97 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elision-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elision-exhausted.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | var C = class {\n> 83 |   #method([,]) {\n     |   ^\n  84 |     \n  85 |     callCount = callCount + 1;\n  86 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-elision.js: Unexpected character '#' (91:2)\n  89 | var callCount = 0;\n  90 | var C = class {\n> 91 |   #method([,]) {\n     |   ^\n  92 |     assert.sameValue(first, 1);\n  93 |     assert.sameValue(second, 0);\n  94 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n> 75 |   #method([]) {\n     |   ^\n  76 |     assert.sameValue(iterations, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (104:2)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   #method([...[,]]) {\n      |   ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (88:2)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   #method([...[]]) {\n     |   ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (84:2)\n  82 | var callCount = 0;\n  83 | var C = class {\n> 84 |   #method([[,] = g()] = []) {\n     |   ^\n  85 |     assert.sameValue(first, 1);\n  86 |     assert.sameValue(second, 0);\n  87 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (82:2)\n  80 | var callCount = 0;\n  81 | var C = class {\n> 82 |   #method([[,] = g()] = [[]]) {\n     |   ^\n  83 |     assert.sameValue(callCount, 0);\n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (80:2)\n  78 | var callCount = 0;\n  79 | var C = class {\n> 80 |   #method([[] = function() { initCount += 1; return iter; }()] = []) {\n     |   ^\n  81 |     assert.sameValue(initCount, 1);\n  82 |     assert.sameValue(iterCount, 0);\n  83 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | var C = class {\n> 79 |   #method([gen = function* () {}, xGen = function* x() {}] = []) {\n     |   ^\n  80 |     assert.sameValue(gen.name, 'gen');\n  81 |     assert.notSameValue(xGen.name, 'xGen');\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (94:2)\n  92 | var callCount = 0;\n  93 | var C = class {\n> 94 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  95 |     assert.sameValue(x, 1);\n  96 |     assert.sameValue(y, 2);\n  97 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | var C = class {\n> 83 |   #method([,] = iter) {\n     |   ^\n  84 |     \n  85 |     callCount = callCount + 1;\n  86 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-elision.js: Unexpected character '#' (91:2)\n  89 | var callCount = 0;\n  90 | var C = class {\n> 91 |   #method([,] = g()) {\n     |   ^\n  92 |     assert.sameValue(first, 1);\n  93 |     assert.sameValue(second, 0);\n  94 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-empty.js: Unexpected character '#' (75:2)\n  73 | var callCount = 0;\n  74 | var C = class {\n> 75 |   #method([] = iter) {\n     |   ^\n  76 |     assert.sameValue(iterations, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (104:2)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   #method([...[,]] = g()) {\n      |   ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (88:2)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   #method([...[]] = iter) {\n     |   ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n> 78 |   #method({ gen = function* () {}, xGen = function* x() {} } = {}) {\n     |   ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | var C = class {\n> 78 |   #method({ gen = function* () {}, xGen = function* x() {} }) {\n     |   ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n> 84 |   static #method([[,] = g()]) {\n     |          ^\n  85 |     assert.sameValue(first, 1);\n  86 |     assert.sameValue(second, 0);\n  87 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (82:9)\n  80 | var callCount = 0;\n  81 | var C = class {\n> 82 |   static #method([[,] = g()]) {\n     |          ^\n  83 |     assert.sameValue(callCount, 0);\n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class {\n> 80 |   static #method([[] = function() { initCount += 1; return iter; }()]) {\n     |          ^\n  81 |     assert.sameValue(initCount, 1);\n  82 |     assert.sameValue(iterCount, 0);\n  83 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class {\n> 79 |   static #method([gen = function* () {}, xGen = function* x() {}]) {\n     |          ^\n  80 |     assert.sameValue(gen.name, 'gen');\n  81 |     assert.notSameValue(xGen.name, 'xGen');\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (94:9)\n  92 | var callCount = 0;\n  93 | var C = class {\n> 94 |   static #method([x, y, z]) {\n     |          ^\n  95 |     assert.sameValue(x, 1);\n  96 |     assert.sameValue(y, 2);\n  97 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | var C = class {\n> 83 |   static #method([,]) {\n     |          ^\n  84 |     \n  85 |     callCount = callCount + 1;\n  86 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-elision.js: Unexpected character '#' (91:9)\n  89 | var callCount = 0;\n  90 | var C = class {\n> 91 |   static #method([,]) {\n     |          ^\n  92 |     assert.sameValue(first, 1);\n  93 |     assert.sameValue(second, 0);\n  94 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n> 75 |   static #method([]) {\n     |          ^\n  76 |     assert.sameValue(iterations, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (104:9)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   static #method([...[,]]) {\n      |          ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (88:9)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   static #method([...[]]) {\n     |          ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (84:9)\n  82 | var callCount = 0;\n  83 | var C = class {\n> 84 |   static #method([[,] = g()] = []) {\n     |          ^\n  85 |     assert.sameValue(first, 1);\n  86 |     assert.sameValue(second, 0);\n  87 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (82:9)\n  80 | var callCount = 0;\n  81 | var C = class {\n> 82 |   static #method([[,] = g()] = [[]]) {\n     |          ^\n  83 |     assert.sameValue(callCount, 0);\n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (80:9)\n  78 | var callCount = 0;\n  79 | var C = class {\n> 80 |   static #method([[] = function() { initCount += 1; return iter; }()] = []) {\n     |          ^\n  81 |     assert.sameValue(initCount, 1);\n  82 |     assert.sameValue(iterCount, 0);\n  83 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | var C = class {\n> 79 |   static #method([gen = function* () {}, xGen = function* x() {}] = []) {\n     |          ^\n  80 |     assert.sameValue(gen.name, 'gen');\n  81 |     assert.notSameValue(xGen.name, 'xGen');\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (94:9)\n  92 | var callCount = 0;\n  93 | var C = class {\n> 94 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  95 |     assert.sameValue(x, 1);\n  96 |     assert.sameValue(y, 2);\n  97 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | var C = class {\n> 83 |   static #method([,] = iter) {\n     |          ^\n  84 |     \n  85 |     callCount = callCount + 1;\n  86 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js: Unexpected character '#' (91:9)\n  89 | var callCount = 0;\n  90 | var C = class {\n> 91 |   static #method([,] = g()) {\n     |          ^\n  92 |     assert.sameValue(first, 1);\n  93 |     assert.sameValue(second, 0);\n  94 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js: Unexpected character '#' (75:9)\n  73 | var callCount = 0;\n  74 | var C = class {\n> 75 |   static #method([] = iter) {\n     |          ^\n  76 |     assert.sameValue(iterations, 0);\n  77 |     callCount = callCount + 1;\n  78 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (104:9)\n  102 | var callCount = 0;\n  103 | var C = class {\n> 104 |   static #method([...[,]] = g()) {\n      |          ^\n  105 |     assert.sameValue(first, 1);\n  106 |     assert.sameValue(second, 1);\n  107 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (88:9)\n  86 | var callCount = 0;\n  87 | var C = class {\n> 88 |   static #method([...[]] = iter) {\n     |          ^\n  89 |     assert.sameValue(iterations, 1);\n  90 |     callCount = callCount + 1;\n  91 |   } <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n> 78 |   static #method({ gen = function* () {}, xGen = function* x() {} } = {}) {\n     |          ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/expressions/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | var C = class {\n> 78 |   static #method({ gen = function* () {}, xGen = function* x() {} }) {\n     |          ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-computed-names.js: Unexpected token (28:26)\n  26 | \n  27 | var C = class {\n> 28 |   *m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                           ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-computed-symbol-names.js: Unexpected token (29:31)\n  27 | \n  28 | var C = class {\n> 29 |   *m() { return 42; } [x]; [y] = 42;\n     |                                ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:22)\n  66 | \n  67 | var C = class {\n> 68 |   *m() { return 42; } #\\u{6F};\n     |                       ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   *m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-literal-names.js: Unexpected token (28:27)\n  26 | \n  27 | var C = class {\n> 28 |   *m() { return 42; } a; b = 42;\n     |                            ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-private-field-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-private-field-usage.js: Unexpected character '#' (27:22)\n  25 | \n  26 | var C = class {\n> 27 |   *m() { return 42; } #m = 'test262';;\n     |                       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:26)\n  25 | \n  26 | var C = class {\n> 27 |   *m() { return 42; } get #m() { return 'test262'; };\n     |                           ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-private-method-usage.js: Unexpected character '#' (27:22)\n  25 | \n  26 | var C = class {\n> 27 |   *m() { return 42; } #m() { return 'test262'; };\n     |                       ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-private-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-private-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-private-names.js: Unexpected character '#' (29:22)\n  27 | \n  28 | var C = class {\n> 29 |   *m() { return 42; } #x; #y;\n     |                       ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:24)\n  60 | \n  61 | var C = class {\n> 62 |   *m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                         ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-getter.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:22)\n  57 | \n  58 | var C = class {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-method.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-method.js: Unexpected character '#' (59:22)\n  57 | \n  58 | var C = class {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:22)\n  57 | \n  58 | var C = class {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-private-setter.js: Unexpected character '#' (59:22)\n  57 | \n  58 | var C = class {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                       ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                       ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                       ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:22)\n  58 | \n  59 | var C = class {\n> 60 |   *m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                       ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:35)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static async * #$(value) {\n     |                                    ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:35)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static async * #$(value) {\n     |                                    ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:35)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static async #$(value) {\n     |                                    ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:35)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static async #$(value) {\n     |                                    ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:31)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static * #$(value) {\n     |                                ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:31)\n  62 | \n  63 | var C = class {\n> 64 |   *m() { return 42; } static * #$(value) {\n     |                                ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$(value) {\n     |                              ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$(value) {\n     |                              ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:29)\n  59 | \n  60 | var C = class {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-static-private-fields.js: Unexpected character '#' (29:29)\n  27 | \n  28 | var C = class {\n> 29 |   *m() { return 42; } static #x; static #y;\n     |                              ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:29)\n  27 | \n  28 | var C = class {\n> 29 |   *m() { return 42; } static #xVal; static #yVal;\n     |                              ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   *m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-gen-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-gen-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-gen-string-literal-names.js: Unexpected token (26:36)\n  24 | \n  25 | var C = class {\n> 26 |   *m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                     ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:34)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static async * #$(value) {\n     |                                   ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:34)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static async * #$(value) {\n     |                                   ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:34)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static async #$(value) {\n     |                                   ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:34)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static async #$(value) {\n     |                                   ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:30)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:30)\n  62 | \n  63 | var C = class {\n> 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-computed-names.js: Unexpected token (28:38)\n  26 | \n  27 | var C = class {\n> 28 |   static async m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                       ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-computed-symbol-names.js: Unexpected token (29:43)\n  27 | \n  28 | var C = class {\n> 29 |   static async m() { return 42; } [x]; [y] = 42;\n     |                                            ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:34)\n  66 | \n  67 | var C = class {\n> 68 |   static async m() { return 42; } #\\u{6F};\n     |                                   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   static async m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-literal-names.js: Unexpected token (28:39)\n  26 | \n  27 | var C = class {\n> 28 |   static async m() { return 42; } a; b = 42;\n     |                                        ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-private-field-usage.js: Unexpected character '#' (27:34)\n  25 | \n  26 | var C = class {\n> 27 |   static async m() { return 42; } #m = 'test262';;\n     |                                   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-private-method-getter-usage.js: Unexpected character '#' (27:38)\n  25 | \n  26 | var C = class {\n> 27 |   static async m() { return 42; } get #m() { return 'test262'; };\n     |                                       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-private-method-usage.js: Unexpected character '#' (27:34)\n  25 | \n  26 | var C = class {\n> 27 |   static async m() { return 42; } #m() { return 'test262'; };\n     |                                   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-private-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-private-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-private-names.js: Unexpected character '#' (29:34)\n  27 | \n  28 | var C = class {\n> 29 |   static async m() { return 42; } #x; #y;\n     |                                   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js: Unexpected token (62:36)\n  60 | \n  61 | var C = class {\n> 62 |   static async m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                                     ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-getter.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method-alt.js: Unexpected character '#' (59:34)\n  57 | \n  58 | var C = class {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-method.js: Unexpected character '#' (59:34)\n  57 | \n  58 | var C = class {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js: Unexpected character '#' (59:34)\n  57 | \n  58 | var C = class {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-private-setter.js: Unexpected character '#' (59:34)\n  57 | \n  58 | var C = class {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                                   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                                   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                                   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js: Unexpected character '#' (60:34)\n  58 | \n  59 | var C = class {\n> 60 |   static async m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                                   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:47)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static async * #$(value) {\n     |                                                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:47)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static async * #$(value) {\n     |                                                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:47)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static async #$(value) {\n     |                                                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:47)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static async #$(value) {\n     |                                                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:43)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static * #$(value) {\n     |                                            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:43)\n  62 | \n  63 | var C = class {\n> 64 |   static async m() { return 42; } static * #$(value) {\n     |                                            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$(value) {\n     |                                          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$(value) {\n     |                                          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:41)\n  59 | \n  60 | var C = class {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-static-private-fields.js: Unexpected character '#' (29:41)\n  27 | \n  28 | var C = class {\n> 29 |   static async m() { return 42; } static #x; static #y;\n     |                                          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js: Unexpected character '#' (29:41)\n  27 | \n  28 | var C = class {\n> 29 |   static async m() { return 42; } static #xVal; static #yVal;\n     |                                          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   static async m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-async-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-async-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-async-method-string-literal-names.js: Unexpected token (26:48)\n  24 | \n  25 | var C = class {\n> 26 |   static async m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                                 ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-computed-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-computed-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-computed-names.js: Unexpected token (28:33)\n  26 | \n  27 | var C = class {\n> 28 |   static *m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                  ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-computed-symbol-names.js: Unexpected token (29:38)\n  27 | \n  28 | var C = class {\n> 29 |   static *m() { return 42; } [x]; [y] = 42;\n     |                                       ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:29)\n  66 | \n  67 | var C = class {\n> 68 |   static *m() { return 42; } #\\u{6F};\n     |                              ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   static *m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-literal-names.js: Unexpected token (28:34)\n  26 | \n  27 | var C = class {\n> 28 |   static *m() { return 42; } a; b = 42;\n     |                                   ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-private-field-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-private-field-usage.js: Unexpected character '#' (27:29)\n  25 | \n  26 | var C = class {\n> 27 |   static *m() { return 42; } #m = 'test262';;\n     |                              ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-private-method-getter-usage.js: Unexpected character '#' (27:33)\n  25 | \n  26 | var C = class {\n> 27 |   static *m() { return 42; } get #m() { return 'test262'; };\n     |                                  ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-private-method-usage.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-private-method-usage.js: Unexpected character '#' (27:29)\n  25 | \n  26 | var C = class {\n> 27 |   static *m() { return 42; } #m() { return 'test262'; };\n     |                              ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-private-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-private-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-private-names.js: Unexpected character '#' (29:29)\n  27 | \n  28 | var C = class {\n> 29 |   static *m() { return 42; } #x; #y;\n     |                              ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js: Unexpected token (62:31)\n  60 | \n  61 | var C = class {\n> 62 |   static *m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                                ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-getter.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method-alt.js: Unexpected character '#' (59:29)\n  57 | \n  58 | var C = class {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-method.js: Unexpected character '#' (59:29)\n  57 | \n  58 | var C = class {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter-alt.js: Unexpected character '#' (59:29)\n  57 | \n  58 | var C = class {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-private-setter.js: Unexpected character '#' (59:29)\n  57 | \n  58 | var C = class {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                              ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                              ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                              ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-privatename-identifier.js: Unexpected character '#' (60:29)\n  58 | \n  59 | var C = class {\n> 60 |   static *m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                              ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:42)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static async * #$(value) {\n     |                                           ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:42)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static async * #$(value) {\n     |                                           ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:42)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static async #$(value) {\n     |                                           ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:42)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static async #$(value) {\n     |                                           ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:38)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static * #$(value) {\n     |                                       ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:38)\n  62 | \n  63 | var C = class {\n> 64 |   static *m() { return 42; } static * #$(value) {\n     |                                       ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$(value) {\n     |                                     ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$(value) {\n     |                                     ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:36)\n  59 | \n  60 | var C = class {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-static-private-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-static-private-fields.js: Unexpected character '#' (29:36)\n  27 | \n  28 | var C = class {\n> 29 |   static *m() { return 42; } static #x; static #y;\n     |                                     ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:36)\n  27 | \n  28 | var C = class {\n> 29 |   static *m() { return 42; } static #xVal; static #yVal;\n     |                                     ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   static *m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-gen-string-literal-names.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-gen-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-gen-string-literal-names.js: Unexpected token (26:43)\n  24 | \n  25 | var C = class {\n> 26 |   static *m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                            ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:41)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static async * #$(value) {\n     |                                          ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:41)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static async * #$(value) {\n     |                                          ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:41)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static async #$(value) {\n     |                                          ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:41)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static async #$(value) {\n     |                                          ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:37)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:37)\n  62 | \n  63 | var C = class {\n> 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     let a = arguments;\n  29 |       return async () => a === arguments;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async () => new.target;\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-arrow.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-arrow.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async () => x;\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     let a = arguments;\n  29 |       return async function() { return a === arguments; };\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async function() { return new.target; };\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method-static/returns-async-function.js-strict:true": "test/language/expressions/class/elements/async-private-method-static/returns-async-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method-static/returns-async-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | var C = class {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async function() { return x; };\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     let a = arguments;\n  29 |       return async () => a === arguments;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async () => new.target;\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-arrow.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-arrow.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-arrow.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async () => x;\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     let a = arguments;\n  29 |       return async function() { return a === arguments; };\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-function-returns-newtarget.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-function-returns-newtarget.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-function-returns-newtarget.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async function() { return new.target; };\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/expressions/class/elements/async-private-method/returns-async-function.js-strict:true": "test/language/expressions/class/elements/async-private-method/returns-async-function.js: SyntaxError: test/language/expressions/class/elements/async-private-method/returns-async-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | var C = class {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async function() { return x; };\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/expressions/class/elements/class-name-static-initializer-default-export.js-strict:true": "test/language/expressions/class/elements/class-name-static-initializer-default-export.js: SyntaxError: test/language/expressions/class/elements/class-name-static-initializer-default-export.js: Unexpected token (25:13)\n  23 | \n  24 | export default class {\n> 25 |     static f = (className = this.name);\n     |              ^\n  26 | }\n  27 | \n  28 | assert.sameValue(className, \"default\"); <at omitted>",
  "test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-multiple.js-strict:true": "test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-multiple.js: SyntaxError: test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-multiple.js: Unexpected character '#' (36:12)\n  34 | \n  35 | var C = class {\n> 36 |     static *#gen() {\n     |             ^\n  37 |         callCount += 1;\n  38 |         yield [...yield yield];\n  39 |     } <at omitted>",
  "test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-single.js-strict:true": "test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-single.js: SyntaxError: test/language/expressions/class/elements/gen-private-method-static/yield-spread-arr-single.js: Unexpected character '#' (33:12)\n  31 | \n  32 | var C = class {\n> 33 |     static *#gen() {\n     |             ^\n  34 |         callCount += 1;\n  35 |         yield [...yield];\n  36 |     } <at omitted>",
  "test/language/expressions/class/elements/gen-private-method-static/yield-spread-obj.js-strict:true": "test/language/expressions/class/elements/gen-private-method-static/yield-spread-obj.js: SyntaxError: test/language/expressions/class/elements/gen-private-method-static/yield-spread-obj.js: Unexpected character '#' (34:12)\n  32 | \n  33 | var C = class {\n> 34 |     static *#gen() {\n     |             ^\n  35 |         callCount += 1;\n  36 |         yield {\n  37 |             ...yield, <at omitted>",
  "test/language/expressions/class/elements/gen-private-method/yield-spread-arr-multiple.js-strict:true": "test/language/expressions/class/elements/gen-private-method/yield-spread-arr-multiple.js: SyntaxError: test/language/expressions/class/elements/gen-private-method/yield-spread-arr-multiple.js: Unexpected character '#' (36:5)\n  34 | \n  35 | var C = class {\n> 36 |     *#gen() {\n     |      ^\n  37 |         callCount += 1;\n  38 |         yield [...yield yield];\n  39 |     } <at omitted>",
  "test/language/expressions/class/elements/gen-private-method/yield-spread-arr-single.js-strict:true": "test/language/expressions/class/elements/gen-private-method/yield-spread-arr-single.js: SyntaxError: test/language/expressions/class/elements/gen-private-method/yield-spread-arr-single.js: Unexpected character '#' (33:5)\n  31 | \n  32 | var C = class {\n> 33 |     *#gen() {\n     |      ^\n  34 |         callCount += 1;\n  35 |         yield [...yield];\n  36 |     } <at omitted>",
  "test/language/expressions/class/elements/gen-private-method/yield-spread-obj.js-strict:true": "test/language/expressions/class/elements/gen-private-method/yield-spread-obj.js: SyntaxError: test/language/expressions/class/elements/gen-private-method/yield-spread-obj.js: Unexpected character '#' (34:5)\n  32 | \n  33 | var C = class {\n> 34 |     *#gen() {\n     |      ^\n  35 |         callCount += 1;\n  36 |         yield {\n  37 |             ...yield, <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async * #$(value) {\n  67 |     yield * await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async * #$(value) {\n  67 |     yield * await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async #$(value) {\n  67 |     return await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async #$(value) {\n  67 |     return await value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; <at omitted>",
  "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | var C = class {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-computed-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-computed-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   *m() { return 42; }\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n> 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   *m() { return 42; }\n  31 |   \n  32 | } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n> 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n> 27 |   b = 42;;\n     |     ^\n  28 |   *m() { return 42; }\n  29 |   \n  30 | } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   *m() { return 42; }\n  31 |    <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-private-field-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n> 27 |   #m = 'test262';;\n     |   ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n> 27 |   get #m() { return 'test262'; };\n     |       ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-private-method-usage.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n> 27 |   #m() { return 'test262'; };\n     |   ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-private-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-private-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n> 29 |   #x; #y;\n     |   ^\n  30 |   *m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n> 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   *m() { return 42; }\n  64 |   \n  65 | } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-method.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-static-private-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n> 29 |   static #x; static #y;\n     |          ^\n  30 |   *m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n> 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   *m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-static-private-methods.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   *m() { return 42; }\n> 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-gen-string-literal-names.js-strict:true": "test/language/expressions/class/elements/new-sc-line-gen-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-gen-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   *m() { return 42; }\n  29 |    <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/private-async-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-async-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-async-generator-method-name.js: Unexpected token (52:8)\n  50 | \n  51 | var C = class {\n> 52 |   async * #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | var C = class {\n> 52 |   async #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-field-as-async-arrow-function.js-strict:true": "test/language/expressions/class/elements/private-field-as-async-arrow-function.js: SyntaxError: test/language/expressions/class/elements/private-field-as-async-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n> 26 |   #m = async () => 'test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-field-as-async-function.js-strict:true": "test/language/expressions/class/elements/private-field-as-async-function.js: SyntaxError: test/language/expressions/class/elements/private-field-as-async-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | var C = class {\n> 26 |   #m = async function() { return 'test262'; };\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); <at omitted>",
  "test/language/expressions/class/elements/private-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-generator-method-name.js: Unexpected character '#' (52:4)\n  50 | \n  51 | var C = class {\n> 52 |   * #method() {};\n     |     ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-getter-is-not-a-own-property.js: TypeError: Object has no member '__lookupGetter__' <at omitted>",
  "test/language/expressions/class/elements/private-methods/prod-private-async-method.js-strict:true": "test/language/expressions/class/elements/private-methods/prod-private-async-method.js: SyntaxError: test/language/expressions/class/elements/private-methods/prod-private-async-method.js: Unexpected character '#' (90:8)\n  88 | \n  89 | var C = class {\n> 90 |   async #m() { return 42; }\n     |         ^\n  91 | \n  92 | \n  93 |   get ref() { return this.#m; } <at omitted>",
  "test/language/expressions/class/elements/private-methods/prod-private-generator.js-strict:true": "test/language/expressions/class/elements/private-methods/prod-private-generator.js: SyntaxError: test/language/expressions/class/elements/private-methods/prod-private-generator.js: Unexpected character '#' (88:4)\n  86 | \n  87 | var C = class {\n> 88 |   * #m() { return 42; }\n     |     ^\n  89 | \n  90 | \n  91 |   get ref() { return this.#m; } <at omitted>",
  "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/expressions/class/elements/private-setter-is-not-a-own-property.js: TypeError: Object has no member '__lookupSetter__' <at omitted>",
  "test/language/expressions/class/elements/private-static-async-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-async-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-async-generator-method-name.js: Unexpected token (54:15)\n  52 | \n  53 | var C = class {\n> 54 |   static async * #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-static-async-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-async-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | var C = class {\n> 54 |   static async #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/private-static-generator-method-name.js-strict:true": "test/language/expressions/class/elements/private-static-generator-method-name.js: SyntaxError: test/language/expressions/class/elements/private-static-generator-method-name.js: Unexpected character '#' (54:11)\n  52 | \n  53 | var C = class {\n> 54 |   static * #method() {};\n     |            ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n> 63 |   static async * #$(value) {\n     |                ^\n  64 |     yield * await value;\n  65 |   }\n  66 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (63:15)\n  61 | \n  62 | var C = class {\n> 63 |   static async * #$(value) {\n     |                ^\n  64 |     yield * await value;\n  65 |   }\n  66 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (63:15)\n  61 | \n  62 | var C = class {\n> 63 |   static async #$(value) {\n     |                ^\n  64 |     return await value;\n  65 |   }\n  66 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (63:15)\n  61 | \n  62 | var C = class {\n> 63 |   static async #$(value) {\n     |                ^\n  64 |     return await value;\n  65 |   }\n  66 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (63:11)\n  61 | \n  62 | var C = class {\n> 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (63:11)\n  61 | \n  62 | var C = class {\n> 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-computed-names.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-computed-names.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-computed-names.js: Unexpected token (28:31)\n  26 | \n  27 | var C = class {\n> 28 |   async m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-computed-symbol-names.js: Unexpected token (29:36)\n  27 | \n  28 | var C = class {\n> 29 |   async m() { return 42; } [x]; [y] = 42;\n     |                                     ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:27)\n  66 | \n  67 | var C = class {\n> 68 |   async m() { return 42; } #\\u{6F};\n     |                            ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   async m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-literal-names.js: Unexpected token (28:32)\n  26 | \n  27 | var C = class {\n> 28 |   async m() { return 42; } a; b = 42;\n     |                                 ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-private-field-usage.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-private-field-usage.js: Unexpected character '#' (27:27)\n  25 | \n  26 | var C = class {\n> 27 |   async m() { return 42; } #m = 'test262';;\n     |                            ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-private-method-getter-usage.js: Unexpected character '#' (27:31)\n  25 | \n  26 | var C = class {\n> 27 |   async m() { return 42; } get #m() { return 'test262'; };\n     |                                ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-private-method-usage.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-private-method-usage.js: Unexpected character '#' (27:27)\n  25 | \n  26 | var C = class {\n> 27 |   async m() { return 42; } #m() { return 'test262'; };\n     |                            ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-private-names.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-private-names.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-private-names.js: Unexpected character '#' (29:27)\n  27 | \n  28 | var C = class {\n> 29 |   async m() { return 42; } #x; #y;\n     |                            ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-field-identifier-initializer.js: Unexpected token (62:29)\n  60 | \n  61 | var C = class {\n> 62 |   async m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                              ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-getter-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-getter.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-method-alt.js: Unexpected character '#' (59:27)\n  57 | \n  58 | var C = class {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-method.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-method.js: Unexpected character '#' (59:27)\n  57 | \n  58 | var C = class {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-setter-alt.js: Unexpected character '#' (59:27)\n  57 | \n  58 | var C = class {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-private-setter.js: Unexpected character '#' (59:27)\n  57 | \n  58 | var C = class {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                            ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                            ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                            ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-privatename-identifier.js: Unexpected character '#' (60:27)\n  58 | \n  59 | var C = class {\n> 60 |   async m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                            ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:40)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static async * #$(value) {\n     |                                         ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:40)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static async * #$(value) {\n     |                                         ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:40)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static async #$(value) {\n     |                                         ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:40)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static async #$(value) {\n     |                                         ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:36)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static * #$(value) {\n     |                                     ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:36)\n  62 | \n  63 | var C = class {\n> 64 |   async m() { return 42; } static * #$(value) {\n     |                                     ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$(value) {\n     |                                   ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$(value) {\n     |                                   ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:34)\n  59 | \n  60 | var C = class {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-static-private-fields.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-static-private-fields.js: Unexpected character '#' (29:34)\n  27 | \n  28 | var C = class {\n> 29 |   async m() { return 42; } static #x; static #y;\n     |                                   ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-static-private-methods-with-fields.js: Unexpected character '#' (29:34)\n  27 | \n  28 | var C = class {\n> 29 |   async m() { return 42; } static #xVal; static #yVal;\n     |                                   ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-static-private-methods.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   async m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-async-method-string-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-async-method-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-async-method-string-literal-names.js: Unexpected token (26:41)\n  24 | \n  25 | var C = class {\n> 26 |   async m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                          ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-computed-names.js-strict:true": "test/language/expressions/class/elements/same-line-gen-computed-names.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | var C = class {\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; *m() { return 42; }\n     |       ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-computed-symbol-names.js-strict:true": "test/language/expressions/class/elements/same-line-gen-computed-symbol-names.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | var C = class {\n> 29 |   [x]; [y] = 42; *m() { return 42; }\n     |            ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/expressions/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | var C = class {\n> 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; *m() { return 42; } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-literal-names-asi.js-strict:true": "test/language/expressions/class/elements/same-line-gen-literal-names-asi.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | var C = class {\n  26 |   a\n> 27 |   b = 42;; *m() { return 42; }\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-gen-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | var C = class {\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; *m() { return 42; }\n  30 |   \n  31 | } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-private-field-usage.js-strict:true": "test/language/expressions/class/elements/same-line-gen-private-field-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n> 27 |   #m = 'test262';; *m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-private-method-getter-usage.js-strict:true": "test/language/expressions/class/elements/same-line-gen-private-method-getter-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | var C = class {\n> 27 |   get #m() { return 'test262'; }; *m() { return 42; }\n     |       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-private-method-usage.js-strict:true": "test/language/expressions/class/elements/same-line-gen-private-method-usage.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | var C = class {\n> 27 |   #m() { return 'test262'; }; *m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-private-names.js-strict:true": "test/language/expressions/class/elements/same-line-gen-private-names.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | var C = class {\n> 29 |   #x; #y; *m() { return 42; }\n     |   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | var C = class {\n> 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; *m() { return 42; }\n     |     ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-field-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-getter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-getter.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-getter.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-method-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-method-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-method.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-method.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-setter-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-private-setter.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-private-setter.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | var C = class {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J; *m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1; *m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1; *m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | var C = class {\n> 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J; *m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | var C = class {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-static-private-fields.js-strict:true": "test/language/expressions/class/elements/same-line-gen-static-private-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n> 29 |   static #x; static #y; *m() { return 42; }\n     |          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/expressions/class/elements/same-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | var C = class {\n> 29 |   static #xVal; static #yVal; *m() { return 42; }\n     |          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-static-private-methods.js-strict:true": "test/language/expressions/class/elements/same-line-gen-static-private-methods.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | var C = class {\n  29 |   ; *m() { return 42; }\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-gen-string-literal-names.js-strict:true": "test/language/expressions/class/elements/same-line-gen-string-literal-names.js: SyntaxError: test/language/expressions/class/elements/same-line-gen-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | var C = class {\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; *m() { return 42; }\n  28 |   \n  29 | } <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | var C = class {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | var C = class {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: Unexpected character '#' (20:15)\n  18 | \n  19 | var C = class {\n> 20 |   static async #prototype() {}\n     |                ^\n  21 | };\n  22 |  <at omitted>",
  "test/language/expressions/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js-strict:true": "test/language/expressions/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js: SyntaxError: test/language/expressions/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js: Unexpected character '#' (20:11)\n  18 | \n  19 | var C = class {\n> 20 |   static * #prototype() {}\n     |            ^\n  21 | };\n  22 |  <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:21)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async * #$(value) {\n     |                      ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:21)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async * #$(value) {\n     |                      ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:21)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) {\n     |                      ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:21)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) {\n     |                      ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:17)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/expressions/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:17)\n  62 | var C = class {\n  63 |   ;;;;\n> 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/expressions/class/heritage-arrow-function.js-strict:true": "test/language/expressions/class/heritage-arrow-function.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/class/heritage-async-arrow-function.js-strict:true": "test/language/expressions/class/heritage-async-arrow-function.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/class/params-dflt-gen-meth-args-unmapped.js-strict:true": "test/language/expressions/class/params-dflt-gen-meth-args-unmapped.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/params-dflt-gen-meth-ref-arguments.js-strict:true": "test/language/expressions/class/params-dflt-gen-meth-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/expressions/class/params-dflt-gen-meth-static-args-unmapped.js-strict:true": "test/language/expressions/class/params-dflt-gen-meth-static-args-unmapped.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/params-dflt-gen-meth-static-ref-arguments.js-strict:true": "test/language/expressions/class/params-dflt-gen-meth-static-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/expressions/class/scope-gen-meth-paramsbody-var-close.js-strict:true": "test/language/expressions/class/scope-gen-meth-paramsbody-var-close.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/scope-gen-meth-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-gen-meth-paramsbody-var-open.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/scope-static-gen-meth-paramsbody-var-close.js-strict:true": "test/language/expressions/class/scope-static-gen-meth-paramsbody-var-close.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/scope-static-gen-meth-paramsbody-var-open.js-strict:true": "test/language/expressions/class/scope-static-gen-meth-paramsbody-var-open.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/expressions/class/static-init-await-binding.js-strict:true": "test/language/expressions/class/static-init-await-binding.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/function/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (84:17)\n  82 | var callCount = 0;\n  83 | var f;\n> 84 | f = function([...[,]]) {\n     |                  ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/expressions/function/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/function/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/function/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (68:17)\n  66 | var callCount = 0;\n  67 | var f;\n> 68 | f = function([...[]]) {\n     |                  ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (84:17)\n  82 | var callCount = 0;\n  83 | var f;\n> 84 | f = function([...[,]] = g()) {\n     |                  ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/function/dstr/dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (68:17)\n  66 | var callCount = 0;\n  67 | var f;\n> 68 | f = function([...[]] = iter) {\n     |                  ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/function/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (77:18)\n  75 | var callCount = 0;\n  76 | var f;\n> 77 | f = function*([...[x, y, z]]) {\n     |                   ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (84:18)\n  82 | var callCount = 0;\n  83 | var f;\n> 84 | f = function*([...[,]]) {\n     |                   ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (68:18)\n  66 | var callCount = 0;\n  67 | var f;\n> 68 | f = function*([...[]]) {\n     |                   ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (58:18)\n  56 | var callCount = 0;\n  57 | var f;\n> 58 | f = function*([...[...x]]) {\n     |                   ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (57:18)\n  55 | var callCount = 0;\n  56 | var f;\n> 57 | f = function*([...{ length }]) {\n     |                   ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; <at omitted>",
  "test/language/expressions/generators/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/generators/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/generators/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:18)\n  56 | var callCount = 0;\n  57 | var f;\n> 58 | f = function*([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                   ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (77:18)\n  75 | var callCount = 0;\n  76 | var f;\n> 77 | f = function*([...[x, y, z]] = [3, 4, 5]) {\n     |                   ^\n  78 |   assert.sameValue(x, 3);\n  79 |   assert.sameValue(y, 4);\n  80 |   assert.sameValue(z, 5); <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (84:18)\n  82 | var callCount = 0;\n  83 | var f;\n> 84 | f = function*([...[,]] = g()) {\n     |                   ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (68:18)\n  66 | var callCount = 0;\n  67 | var f;\n> 68 | f = function*([...[]] = iter) {\n     |                   ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (58:18)\n  56 | var callCount = 0;\n  57 | var f;\n> 58 | f = function*([...[...x]] = values) {\n     |                   ^\n  59 |   assert(Array.isArray(x));\n  60 |   assert.sameValue(x.length, 3);\n  61 |   assert.sameValue(x[0], 1); <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-id.js: Unexpected token (57:18)\n  55 | var callCount = 0;\n  56 | var f;\n> 57 | f = function*([...{ length }] = [1, 2, 3]) {\n     |                   ^\n  58 |   assert.sameValue(length, 3);\n  59 |   callCount = callCount + 1;\n  60 | }; <at omitted>",
  "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (58:18)\n  56 | var callCount = 0;\n  57 | var f;\n> 58 | f = function*([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                   ^\n  59 |   assert.sameValue(v, 7);\n  60 |   assert.sameValue(w, 8);\n  61 |   assert.sameValue(x, 9); <at omitted>",
  "test/language/expressions/generators/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/generators/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-getter.js: Unexpected token (46:15)\n  44 | var callCount = 0;\n  45 | var f;\n> 46 | f = function*({...x} = { get v() { count++; return 2; } }) {\n     |                ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { <at omitted>",
  "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:15)\n  45 | var callCount = 0;\n  46 | var f;\n> 47 | f = function*({...rest} = o) {\n     |                ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { <at omitted>",
  "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/generators/dstr/dflt-obj-ptrn-rest-val-obj.js: Unexpected token (45:21)\n  43 | var callCount = 0;\n  44 | var f;\n> 45 | f = function*({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                      ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  <at omitted>",
  "test/language/expressions/generators/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/generators/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/generators/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/expressions/generators/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/expressions/generators/dstr/obj-ptrn-rest-getter.js: Unexpected token (46:15)\n  44 | var callCount = 0;\n  45 | var f;\n> 46 | f = function*({...x}) {\n     |                ^\n  47 |   assert.sameValue(count, 1);\n  48 | \n  49 |   verifyProperty(x, \"v\", { <at omitted>",
  "test/language/expressions/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/expressions/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/expressions/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (47:15)\n  45 | var callCount = 0;\n  46 | var f;\n> 47 | f = function*({...rest}) {\n     |                ^\n  48 |   assert.sameValue(rest.x, undefined);\n  49 | \n  50 |   verifyProperty(rest, \"a\", { <at omitted>",
  "test/language/expressions/generators/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/expressions/generators/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/expressions/generators/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (45:21)\n  43 | var callCount = 0;\n  44 | var f;\n> 45 | f = function*({a, b, ...rest}) {\n     |                      ^\n  46 |   assert.sameValue(rest.a, undefined);\n  47 |   assert.sameValue(rest.b, undefined);\n  48 |  <at omitted>",
  "test/language/expressions/generators/implicit-name.js-strict:true": "test/language/expressions/generators/implicit-name.js: Test262Error: Expected SameValue(«_callee», «f») to be true <at omitted>",
  "test/language/expressions/generators/invoke-as-constructor.js-strict:true": "test/language/expressions/generators/invoke-as-constructor.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/generators/name.js-strict:true": "test/language/expressions/generators/name.js: Test262Error: descriptor value should be  <at omitted>",
  "test/language/expressions/generators/named-yield-spread-arr-multiple.js-strict:true": "test/language/expressions/generators/named-yield-spread-arr-multiple.js: Error: test/language/expressions/generators/named-yield-spread-arr-multiple.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/generators/named-yield-spread-arr-single.js-strict:true": "test/language/expressions/generators/named-yield-spread-arr-single.js: Error: test/language/expressions/generators/named-yield-spread-arr-single.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/generators/named-yield-spread-obj.js-strict:true": "test/language/expressions/generators/named-yield-spread-obj.js: SyntaxError: test/language/expressions/generators/named-yield-spread-obj.js: Unexpected token (30:6)\n  28 |   callCount += 1;\n  29 |   yield {\n> 30 |       ...yield,\n     |       ^\n  31 |       y: 1,\n  32 |       ...yield yield,\n  33 |     }; <at omitted>",
  "test/language/expressions/generators/no-name.js-strict:true": "test/language/expressions/generators/no-name.js: Test262Error: Expected SameValue(«_callee», «») to be true <at omitted>",
  "test/language/expressions/generators/params-dflt-ref-arguments.js-strict:true": "test/language/expressions/generators/params-dflt-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/expressions/generators/static-init-await-binding.js-strict:true": "test/language/expressions/generators/static-init-await-binding.js: SyntaxError: test/language/expressions/generators/static-init-await-binding.js: Unexpected token (16:9)\n  14 | \n  15 | class C {\n> 16 |   static {\n     |          ^\n  17 |     (function * await (await) {});\n  18 |   }\n  19 | } <at omitted>",
  "test/language/expressions/generators/static-init-await-reference.js-strict:true": "test/language/expressions/generators/static-init-await-reference.js: SyntaxError:  test/language/expressions/generators/static-init-await-reference.js: await can be used only inside an async function (15:4)\n  13 | ---*/\n  14 | \n> 15 | var await = 0;\n     |     ^\n  16 | var fromParam, fromBody;\n  17 | \n  18 | class C { <at omitted>",
  "test/language/expressions/generators/yield-spread-arr-multiple.js-strict:true": "test/language/expressions/generators/yield-spread-arr-multiple.js: Error: test/language/expressions/generators/yield-spread-arr-multiple.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/generators/yield-spread-arr-single.js-strict:true": "test/language/expressions/generators/yield-spread-arr-single.js: Error: test/language/expressions/generators/yield-spread-arr-single.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/generators/yield-spread-obj.js-strict:true": "test/language/expressions/generators/yield-spread-obj.js: SyntaxError: test/language/expressions/generators/yield-spread-obj.js: Unexpected token (30:6)\n  28 |   callCount += 1;\n  29 |   yield {\n> 30 |       ...yield,\n     |       ^\n  31 |       y: 1,\n  32 |       ...yield yield,\n  33 |     }; <at omitted>",
  "test/language/expressions/in/private-field-rhs-await-present.js-strict:true": "test/language/expressions/in/private-field-rhs-await-present.js: SyntaxError: test/language/expressions/in/private-field-rhs-await-present.js: Unexpected character '#' (25:2)\n  23 | \n  24 | class C {\n> 25 |   #field;\n     |   ^\n  26 | \n  27 |   static async isNameIn(value) {\n  28 |     return #field in await(value); <at omitted>",
  "test/language/expressions/in/private-field-rhs-yield-present.js-strict:true": "test/language/expressions/in/private-field-rhs-yield-present.js: SyntaxError: test/language/expressions/in/private-field-rhs-yield-present.js: Unexpected character '#' (24:2)\n  22 | \n  23 | class C {\n> 24 |   #field;\n     |   ^\n  25 | \n  26 |   static *isNameIn() {\n  27 |     return #field in (yield); <at omitted>",
  "test/language/expressions/new.target/escaped-new.js-strict:true": "test/language/expressions/new.target/escaped-new.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/new.target/escaped-target.js-strict:true": "test/language/expressions/new.target/escaped-target.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/accessor-name-computed-yield-expr.js-strict:true": "test/language/expressions/object/accessor-name-computed-yield-expr.js: SyntaxError: Unexpected strict mode reserved word <at omitted>",
  "test/language/expressions/object/concise-generator.js-strict:true": "test/language/expressions/object/concise-generator.js: SyntaxError: 'super' keyword unexpected here <at omitted>",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: SyntaxError: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-integer-separators.js: Identifier directly after number (29:4)\n  27 | \n  28 | let o = {\n> 29 |   [1_2_3_4_5_6_7_8]: 1_2_3_4_5_6_7_8\n     |     ^\n  30 | };\n  31 | \n  32 | assert.sameValue( <at omitted>",
  "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js-strict:true": "test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js: test/language/expressions/object/cpn-obj-lit-computed-property-name-from-yield-expression.js: Line 30:17 Unexpected number (and 20 more errors)",
  "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-elision.js: Unexpected token (86:13)\n  84 | var callCount = 0;\n  85 | var obj = {\n> 86 |   method([...[,]]) {\n     |              ^\n  87 |     assert.sameValue(first, 1);\n  88 |     assert.sameValue(second, 1);\n  89 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/object/dstr/meth-ary-ptrn-rest-ary-empty.js: Unexpected token (70:13)\n  68 | var callCount = 0;\n  69 | var obj = {\n> 70 |   method([...[]]) {\n     |              ^\n  71 |     assert.sameValue(iterations, 1);\n  72 |     callCount = callCount + 1;\n  73 |   } <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (86:13)\n  84 | var callCount = 0;\n  85 | var obj = {\n> 86 |   method([...[,]] = g()) {\n     |              ^\n  87 |     assert.sameValue(first, 1);\n  88 |     assert.sameValue(second, 1);\n  89 |     callCount = callCount + 1; <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (70:13)\n  68 | var callCount = 0;\n  69 | var obj = {\n> 70 |   method([...[]] = iter) {\n     |              ^\n  71 |     assert.sameValue(iterations, 1);\n  72 |     callCount = callCount + 1;\n  73 |   } <at omitted>",
  "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/object/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/expressions/object/dstr/meth-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/expressions/object/fn-name-gen.js-strict:true": "test/language/expressions/object/fn-name-gen.js: Test262Error: via IdentifierName Expected SameValue(«_callee», «id») to be true <at omitted>",
  "test/language/expressions/object/identifier-shorthand-static-init-await-invalid.js-strict:true": "test/language/expressions/object/identifier-shorthand-static-init-await-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/async-meth-dflt-params-abrupt.js-strict:true": "test/language/expressions/object/method-definition/async-meth-dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/expressions/object/method-definition/async-meth-dflt-params-ref-later.js-strict:true": "test/language/expressions/object/method-definition/async-meth-dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/object/method-definition/async-meth-dflt-params-ref-self.js-strict:true": "test/language/expressions/object/method-definition/async-meth-dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/expressions/object/method-definition/async-meth-escaped-async.js-strict:true": "test/language/expressions/object/method-definition/async-meth-escaped-async.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/async-super-call-body.js-strict:true": "test/language/expressions/object/method-definition/async-super-call-body.js: SyntaxError: 'super' keyword unexpected here <at omitted>",
  "test/language/expressions/object/method-definition/early-errors-object-method-async-lineterminator.js-strict:true": "test/language/expressions/object/method-definition/early-errors-object-method-async-lineterminator.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-g.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-g.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-get-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-get.js-strict:true": "test/language/expressions/object/method-definition/escaped-get.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-e.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-e.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-s.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-s.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set-t.js-strict:true": "test/language/expressions/object/method-definition/escaped-set-t.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/escaped-set.js-strict:true": "test/language/expressions/object/method-definition/escaped-set.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/object/method-definition/fn-name-gen.js-strict:true": "test/language/expressions/object/method-definition/fn-name-gen.js: Test262Error: via IdentifierName Expected SameValue(«_callee», «id») to be true <at omitted>",
  "test/language/expressions/object/method-definition/gen-yield-spread-arr-multiple.js-strict:true": "test/language/expressions/object/method-definition/gen-yield-spread-arr-multiple.js: Error: test/language/expressions/object/method-definition/gen-yield-spread-arr-multiple.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/object/method-definition/gen-yield-spread-arr-single.js-strict:true": "test/language/expressions/object/method-definition/gen-yield-spread-arr-single.js: Error: test/language/expressions/object/method-definition/gen-yield-spread-arr-single.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/expressions/object/method-definition/gen-yield-spread-obj.js-strict:true": "test/language/expressions/object/method-definition/gen-yield-spread-obj.js: SyntaxError: test/language/expressions/object/method-definition/gen-yield-spread-obj.js: Unexpected token (31:8)\n  29 |     callCount += 1;\n  30 |     yield {\n> 31 |         ...yield,\n     |         ^\n  32 |         y: 1,\n  33 |         ...yield yield,\n  34 |       }; <at omitted>",
  "test/language/expressions/object/method-definition/generator-invoke-ctor.js-strict:true": "test/language/expressions/object/method-definition/generator-invoke-ctor.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/expressions/object/method-definition/generator-name-prop-string.js-strict:true": "test/language/expressions/object/method-definition/generator-name-prop-string.js: Test262Error: Expected SameValue(«_callee», «method») to be true <at omitted>",
  "test/language/expressions/object/method-definition/generator-name-prop-symbol.js-strict:true": "test/language/expressions/object/method-definition/generator-name-prop-symbol.js: Test262Error: Expected SameValue(«_callee», «[method]») to be true <at omitted>",
  "test/language/expressions/object/method-definition/generator-super-prop-body.js-strict:true": "test/language/expressions/object/method-definition/generator-super-prop-body.js: SyntaxError: 'super' keyword unexpected here <at omitted>",
  "test/language/expressions/object/method-definition/generator-super-prop-param.js-strict:true": "test/language/expressions/object/method-definition/generator-super-prop-param.js: SyntaxError: 'super' keyword unexpected here <at omitted>",
  "test/language/expressions/object/method-definition/params-dflt-gen-meth-ref-arguments.js-strict:true": "test/language/expressions/object/method-definition/params-dflt-gen-meth-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/expressions/object/method-definition/static-init-await-binding-generator.js-strict:true": "test/language/expressions/object/method-definition/static-init-await-binding-generator.js: SyntaxError: test/language/expressions/object/method-definition/static-init-await-binding-generator.js: Unexpected token (16:9)\n  14 | \n  15 | class C {\n> 16 |   static {\n     |          ^\n  17 |     ({*method(await) {}});\n  18 |   }\n  19 | } <at omitted>",
  "test/language/expressions/object/method-definition/static-init-await-reference-generator.js-strict:true": "test/language/expressions/object/method-definition/static-init-await-reference-generator.js: SyntaxError:  test/language/expressions/object/method-definition/static-init-await-reference-generator.js: await can be used only inside an async function (15:4)\n  13 | ---*/\n  14 | \n> 15 | var await = 0;\n     |     ^\n  16 | var fromParam, fromBody;\n  17 | \n  18 | class C { <at omitted>",
  "test/language/expressions/optional-chaining/iteration-statement-for-await-of.js-strict:true": "test/language/expressions/optional-chaining/iteration-statement-for-await-of.js: SyntaxError: test/language/expressions/optional-chaining/iteration-statement-for-await-of.js: Unexpected token, expected ( (31:6)\n  29 | async function checkAssertions() {\n  30 |   let count = 0;\n> 31 |   for await (const num of obj?.iterable) {\n     |       ^\n  32 |     count += num;\n  33 |   }\n  34 |   assert.sameValue(3, count); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-identifier.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-identifier.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-identifier.js: Unexpected token (19:27)\n  17 | const c = {d: Promise.resolve(11)};\n  18 | async function checkAssertions() {\n> 19 |   assert.sameValue(await a?.b, undefined);\n     |                            ^\n  20 |   assert.sameValue(await c?.d, 11);\n  21 |   \n  22 |   Promise.prototype.x = 42; <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-literal.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-literal.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-literal.js: Unexpected token (17:33)\n  15 | \n  16 | async function checkAssertions() {\n> 17 |   assert.sameValue(await \"hello\"?.[0], 'h');\n     |                                  ^\n  18 |   assert.sameValue(await null?.a, undefined);\n  19 | }\n  20 | checkAssertions().then($DONE, $DONE); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression-async-this.js-strict:true": "test/language/expressions/optional-chaining/member-expression-async-this.js: SyntaxError: test/language/expressions/optional-chaining/member-expression-async-this.js: Unexpected token (17:20)\n  15 | \n  16 | async function thisFn() {\n> 17 |   return await this?.a\n     |                     ^\n  18 | }\n  19 | thisFn.call({a: Promise.resolve(33)}).then(function(arg) {\n  20 |   assert.sameValue(33, arg); <at omitted>",
  "test/language/expressions/optional-chaining/member-expression.js-strict:true": "test/language/expressions/optional-chaining/member-expression.js: SyntaxError: test/language/expressions/optional-chaining/member-expression.js: Unexpected token (18:23)\n  16 | //   IdentifierReference\n  17 | const a = {b: 22};\n> 18 | assert.sameValue(22, a?.b);\n     |                        ^\n  19 | //   this\n  20 | function fn () {\n  21 |   return this?.a <at omitted>",
  "test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-async-optional-chain-square-brackets.js: Unexpected token (18:35)\n  16 | \n  17 | async function checkAssertions() {\n> 18 |   assert.sameValue(await {a: [11]}?.a[0], 11);\n     |                                    ^\n  19 |   const b = {c: [22, 33]};\n  20 |   assert.sameValue(b?.c[await Promise.resolve(1)], 33);\n  21 |   function e(val) { <at omitted>",
  "test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js-strict:true": "test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js: SyntaxError: test/language/expressions/optional-chaining/optional-chain-async-square-brackets.js: Unexpected token (18:30)\n  16 | \n  17 | async function checkAssertions() {\n> 18 |   assert.sameValue(await [11]?.[0], 11);\n     |                               ^\n  19 |   assert.sameValue([22, 33]?.[await Promise.resolve(1)], 33);\n  20 |   assert.sameValue([44, await Promise.resolve(55)]?.[1], 55);\n  21 |   assert.sameValue(undefined?.[ <at omitted>",
  "test/language/expressions/yield/in-iteration-stmt.js-strict:true": "test/language/expressions/yield/in-iteration-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/yield/rhs-template-middle.js-strict:true": "test/language/expressions/yield/rhs-template-middle.js: Error: test/language/expressions/yield/rhs-template-middle.js: unknown Expression of type \"TemplateLiteral\" <at omitted>",
  "test/language/expressions/yield/star-in-iteration-stmt.js-strict:true": "test/language/expressions/yield/star-in-iteration-stmt.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/expressions/yield/star-in-rltn-expr.js-strict:true": "test/language/expressions/yield/star-in-rltn-expr.js: Test262Error: `done` property (second iteration) Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/expressions/yield/star-return-is-null.js-strict:true": "test/language/expressions/yield/star-return-is-null.js: TypeError: Cannot read property 'call' of undefined or null <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-nrml-next-call-non-obj.js-strict:true": "test/language/expressions/yield/star-rhs-iter-nrml-next-call-non-obj.js: Test262Error: Expected SameValue(«undefined», «true») to be true <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-nrml-next-get-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-nrml-next-get-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-nrml-res-done-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-nrml-res-done-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-nrml-res-value-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-nrml-res-value-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-rtrn-res-done-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-rtrn-res-done-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-rtrn-res-value-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-rtrn-res-value-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-rtrn-rtrn-call-non-obj.js-strict:true": "test/language/expressions/yield/star-rhs-iter-rtrn-rtrn-call-non-obj.js: Test262Error: Expected SameValue(«undefined», «true») to be true <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-rtrn-rtrn-get-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-rtrn-rtrn-get-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-res-done-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-res-done-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-res-value-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-res-value-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-thrw-call-non-obj.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-thrw-call-non-obj.js: Test262Error: Expected SameValue(«undefined», «true») to be true <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-thrw-get-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-thrw-get-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-violation-rtrn-get-err.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-violation-rtrn-get-err.js: Test262Error:  <at omitted>",
  "test/language/expressions/yield/star-rhs-iter-thrw-violation-rtrn-invoke.js-strict:true": "test/language/expressions/yield/star-rhs-iter-thrw-violation-rtrn-invoke.js: Test262Error: Expected SameValue(«1», «0») to be true <at omitted>",
  "test/language/expressions/yield/star-throw-is-null.js-strict:true": "test/language/expressions/yield/star-throw-is-null.js: Test262Error: Expected SameValue(«0», «1») to be true <at omitted>",
  "test/language/identifier-resolution/static-init-invalid-await.js-strict:true": "test/language/identifier-resolution/static-init-invalid-await.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/identifiers/part-unicode-14.0.0-class-escaped.js-strict:true": "test/language/identifiers/part-unicode-14.0.0-class-escaped.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0-class-escaped.js: Unexpected character '#' (20:2)\n  18 | \n  19 | class _ {\n> 20 |   #_\\u0898\\u0899\\u089A\\u089B\\u089C\\u089D\\u089E\\u089F\\u08CA\\u08CB\\u08CC\\u08CD\\u08CE\\u08CF\\u08D0\\u08D1\\u08D2\\u0C3C\\u1715\\u180F\\u1AC1\\u1AC2\\u1AC3\\u1AC4\\u1AC5\\u1AC6\\u1AC7\\u1AC8\\u1AC9\\u1ACA\\u1ACB\\u1ACC\\u1ACD\\u1ACE\\u1DFA\\u{10F82}\\u{10F83}\\u{10F84}\\u{10F85}\\u{11070}\\u{11073}\\u{11074}\\u{110C2}\\u{16AC0}\\u{16AC1}\\u{16AC2}\\u{16AC3}\\u{16AC4}\\u{16AC5}\\u{16AC6}\\u{16AC7}\\u{16AC8}\\u{16AC9}\\u{1CF00}\\u{1CF01}\\u{1CF02}\\u{1CF03}\\u{1CF04}\\u{1CF05}\\u{1CF06}\\u{1CF07}\\u{1CF08}\\u{1CF09}\\u{1CF0A}\\u{1CF0B}\\u{1CF0C}\\u{1CF0D}\\u{1CF0E}\\u{1CF0F}\\u{1CF10}\\u{1CF11}\\u{1CF12}\\u{1CF13}\\u{1CF14}\\u{1CF15}\\u{1CF16}\\u{1CF17}\\u{1CF18}\\u{1CF19}\\u{1CF1A}\\u{1CF1B}\\u{1CF1C}\\u{1CF1D}\\u{1CF1E}\\u{1CF1F}\\u{1CF20}\\u{1CF21}\\u{1CF22}\\u{1CF23}\\u{1CF24}\\u{1CF25}\\u{1CF26}\\u{1CF27}\\u{1CF28}\\u{1CF29}\\u{1CF2A}\\u{1CF2B}\\u{1CF2C}\\u{1CF2D}\\u{1CF30}\\u{1CF31}\\u{1CF32}\\u{1CF33}\\u{1CF34}\\u{1CF35}\\u{1CF36}\\u{1CF37}\\u{1CF38}\\u{1CF39}\\u{1CF3A}\\u{1CF3B}\\u{1CF3C}\\u{1CF3D}\\u{1CF3E}\\u{1CF3F}\\u{1CF40}\\u{1CF41}\\u{1CF42}\\u{1CF43}\\u{1CF44}\\u{1CF45}\\u{1CF46}\\u{1E2AE};\n     |   ^\n  21 | };\n  22 |  <at omitted>",
  "test/language/identifiers/part-unicode-14.0.0-class.js-strict:true": "test/language/identifiers/part-unicode-14.0.0-class.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0-class.js: Unexpected character '#' (17:2)\n  15 | \n  16 | class _ {\n> 17 |   #_఼᜕࢙࢚࢛࣏࣐࣑࣒࢘࢜࢝࢞࢟࣊࣋࣌࣍࣎᠏𑁰᷺᫃᫄᫊𐾃𐾅᫁᫂᫅᫆᫇᫈᫉᫋ᫌᫍᫎ𐾂𐾄𑁳𑁴𑃂𖫀𖫁𖫂𖫃𖫄𖫅𖫆𖫇𖫈𖫉𜼀𜼁𜼂𜼃𜼄𜼅𜼆𜼇𜼈𜼉𜼊𜼋𜼌𜼍𜼎𜼏𜼐𜼑𜼒𜼓𜼔𜼕𜼖𜼗𜼘𜼙𜼚𜼛𜼜𜼝𜼞𜼟𜼠𜼡𜼢𜼣𜼤𜼥𜼦𜼧𜼨𜼩𜼪𜼫𜼬𜼭𜼰𜼱𜼲𜼳𜼴𜼵𜼶𜼷𜼸𜼹𜼺𜼻𜼼𜼽𜼾𜼿𜽀𜽁𜽂𜽃𜽄𜽅𜽆𞊮;\n     |   ^\n  18 | };\n  19 |  <at omitted>",
  "test/language/identifiers/part-unicode-14.0.0-escaped.js-strict:true": "test/language/identifiers/part-unicode-14.0.0-escaped.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0-escaped.js: Invalid Unicode escape (17:5)\n  15 | ---*/\n  16 | \n> 17 | var _\\u0898\\u0899\\u089A\\u089B\\u089C\\u089D\\u089E\\u089F\\u08CA\\u08CB\\u08CC\\u08CD\\u08CE\\u08CF\\u08D0\\u08D1\\u08D2\\u0C3C\\u1715\\u180F\\u1AC1\\u1AC2\\u1AC3\\u1AC4\\u1AC5\\u1AC6\\u1AC7\\u1AC8\\u1AC9\\u1ACA\\u1ACB\\u1ACC\\u1ACD\\u1ACE\\u1DFA\\u{10F82}\\u{10F83}\\u{10F84}\\u{10F85}\\u{11070}\\u{11073}\\u{11074}\\u{110C2}\\u{16AC0}\\u{16AC1}\\u{16AC2}\\u{16AC3}\\u{16AC4}\\u{16AC5}\\u{16AC6}\\u{16AC7}\\u{16AC8}\\u{16AC9}\\u{1CF00}\\u{1CF01}\\u{1CF02}\\u{1CF03}\\u{1CF04}\\u{1CF05}\\u{1CF06}\\u{1CF07}\\u{1CF08}\\u{1CF09}\\u{1CF0A}\\u{1CF0B}\\u{1CF0C}\\u{1CF0D}\\u{1CF0E}\\u{1CF0F}\\u{1CF10}\\u{1CF11}\\u{1CF12}\\u{1CF13}\\u{1CF14}\\u{1CF15}\\u{1CF16}\\u{1CF17}\\u{1CF18}\\u{1CF19}\\u{1CF1A}\\u{1CF1B}\\u{1CF1C}\\u{1CF1D}\\u{1CF1E}\\u{1CF1F}\\u{1CF20}\\u{1CF21}\\u{1CF22}\\u{1CF23}\\u{1CF24}\\u{1CF25}\\u{1CF26}\\u{1CF27}\\u{1CF28}\\u{1CF29}\\u{1CF2A}\\u{1CF2B}\\u{1CF2C}\\u{1CF2D}\\u{1CF30}\\u{1CF31}\\u{1CF32}\\u{1CF33}\\u{1CF34}\\u{1CF35}\\u{1CF36}\\u{1CF37}\\u{1CF38}\\u{1CF39}\\u{1CF3A}\\u{1CF3B}\\u{1CF3C}\\u{1CF3D}\\u{1CF3E}\\u{1CF3F}\\u{1CF40}\\u{1CF41}\\u{1CF42}\\u{1CF43}\\u{1CF44}\\u{1CF45}\\u{1CF46}\\u{1E2AE};\n     |      ^\n  18 |  <at omitted>",
  "test/language/identifiers/part-unicode-14.0.0.js-strict:true": "test/language/identifiers/part-unicode-14.0.0.js: SyntaxError: test/language/identifiers/part-unicode-14.0.0.js: Unexpected character '࢘' (15:5)\n  13 | ---*/\n  14 | \n> 15 | var _఼᜕࢙࢚࢛࣏࣐࣑࣒࢘࢜࢝࢞࢟࣊࣋࣌࣍࣎᠏𑁰᷺᫃᫄᫊𐾃𐾅᫁᫂᫅᫆᫇᫈᫉᫋ᫌᫍᫎ𐾂𐾄𑁳𑁴𑃂𖫀𖫁𖫂𖫃𖫄𖫅𖫆𖫇𖫈𖫉𜼀𜼁𜼂𜼃𜼄𜼅𜼆𜼇𜼈𜼉𜼊𜼋𜼌𜼍𜼎𜼏𜼐𜼑𜼒𜼓𜼔𜼕𜼖𜼗𜼘𜼙𜼚𜼛𜼜𜼝𜼞𜼟𜼠𜼡𜼢𜼣𜼤𜼥𜼦𜼧𜼨𜼩𜼪𜼫𜼬𜼭𜼰𜼱𜼲𜼳𜼴𜼵𜼶𜼷𜼸𜼹𜼺𜼻𜼼𜼽𜼾𜼿𜽀𜽁𜽂𜽃𜽄𜽅𜽆𞊮;\n     |      ^\n  16 |  <at omitted>",
  "test/language/literals/regexp/S7.8.5_A1.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\ud800», «�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A1.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A1.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«\\\\\\ud800», «\\�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A2.1_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.1_T2.js: Test262Error: Code unit: d800 Expected SameValue(«nnnn\\ud800», «nnnn�») to be true <at omitted>",
  "test/language/literals/regexp/S7.8.5_A2.4_T2.js-strict:true": "test/language/literals/regexp/S7.8.5_A2.4_T2.js: Test262Error: Code unit: d800 Expected SameValue(«a\\\\\\ud800», «a\\�») to be true <at omitted>",
  "test/language/literals/regexp/early-err-flags-unicode-escape.js-strict:true": "test/language/literals/regexp/early-err-flags-unicode-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-case-mapping.js-strict:true": "test/language/literals/regexp/u-case-mapping.js: Test262Error: Case mapping is not applied in the absence of the `u` flag Expected SameValue(«true», «false») to be true <at omitted>",
  "test/language/literals/regexp/u-invalid-class-escape.js-strict:true": "test/language/literals/regexp/u-invalid-class-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-extended-pattern-char.js-strict:true": "test/language/literals/regexp/u-invalid-extended-pattern-char.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-identity-escape.js-strict:true": "test/language/literals/regexp/u-invalid-identity-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-legacy-octal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-legacy-octal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js-strict:true": "test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-oob-decimal-escape.js-strict:true": "test/language/literals/regexp/u-invalid-oob-decimal-escape.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookahead.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookahead.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js-strict:true": "test/language/literals/regexp/u-invalid-range-negative-lookbehind.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/regexp/u-unicode-esc-non-hex.js-strict:true": "test/language/literals/regexp/u-unicode-esc-non-hex.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T1.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T1.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/literals/string/S7.8.4_A4.3_T2.js-strict:true": "test/language/literals/string/S7.8.4_A4.3_T2.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/reserved-words/await-module.js-strict:true": "test/language/reserved-words/await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/async-function/cptn-decl.js-strict:true": "test/language/statements/async-function/cptn-decl.js: SyntaxError: SyntaxError: <eval>: Line 1:7 Unexpected token function (and 2 more errors) <at omitted>",
  "test/language/statements/async-function/dflt-params-abrupt.js-strict:true": "test/language/statements/async-function/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/statements/async-function/dflt-params-ref-later.js-strict:true": "test/language/statements/async-function/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/async-function/dflt-params-ref-self.js-strict:true": "test/language/statements/async-function/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/async-function/escaped-async.js-strict:true": "test/language/statements/async-function/escaped-async.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/async-function/evaluation-default-that-throws.js-strict:true": "test/language/statements/async-function/evaluation-default-that-throws.js: TypeError: Value is not an object: null <at omitted>",
  "test/language/statements/class/accessor-name-inst-computed-yield-expr.js-strict:true": "test/language/statements/class/accessor-name-inst-computed-yield-expr.js: Error: test/language/statements/class/accessor-name-inst-computed-yield-expr.js: unknown Statement of type \"ClassDeclaration\" <at omitted>",
  "test/language/statements/class/accessor-name-static-computed-yield-expr.js-strict:true": "test/language/statements/class/accessor-name-static-computed-yield-expr.js: Error: test/language/statements/class/accessor-name-static-computed-yield-expr.js: unknown Statement of type \"ClassDeclaration\" <at omitted>",
  "test/language/statements/class/async-meth-escaped-async.js-strict:true": "test/language/statements/class/async-meth-escaped-async.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/async-method-static/dflt-params-abrupt.js-strict:true": "test/language/statements/class/async-method-static/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/statements/class/async-method-static/dflt-params-ref-later.js-strict:true": "test/language/statements/class/async-method-static/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/class/async-method-static/dflt-params-ref-self.js-strict:true": "test/language/statements/class/async-method-static/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/class/async-method/dflt-params-abrupt.js-strict:true": "test/language/statements/class/async-method/dflt-params-abrupt.js: Test262Error:  <at omitted>",
  "test/language/statements/class/async-method/dflt-params-ref-later.js-strict:true": "test/language/statements/class/async-method/dflt-params-ref-later.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/class/async-method/dflt-params-ref-self.js-strict:true": "test/language/statements/class/async-method/dflt-params-ref-self.js: ReferenceError: Cannot access a variable before initialization <at omitted>",
  "test/language/statements/class/class-name-ident-await-escaped-module.js-strict:true": "test/language/statements/class/class-name-ident-await-escaped-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/class-name-ident-await-module.js-strict:true": "test/language/statements/class/class-name-ident-await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-integer-separators.js: Identifier directly after number (40:8)\n  38 | \n  39 | class C {\n> 40 |   get [1_2_3_4_5_6_7_8]() {\n     |         ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js: Error: test/language/statements/class/cpn-class-decl-accessors-computed-property-name-from-yield-expression.js: unknown Statement of type \"ClassDeclaration\" <at omitted>",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | class C {\n> 40 |   [1_2_3_4_5_6_7_8]() {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   }\n  43 |   static [1_2_3_4_5_6_7_8]() { <at omitted>",
  "test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js: Error: test/language/statements/class/cpn-class-decl-computed-property-name-from-yield-expression.js: unknown Statement of type \"ClassDeclaration\" <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n> 40 |   [async () => {}] = 1;\n     |                    ^\n  41 | \n  42 |   static [async () => {}] = 1;\n  43 | }; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n> 41 |   [g()] = 1;\n     |         ^\n  42 | \n  43 |   static [g()] = 1;\n  44 | }; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n> 40 |   [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n     |     ^\n  41 | \n  42 |   static [1_2_3_4_5_6_7_8] = 1_2_3_4_5_6_7_8;\n  43 | }; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n> 41 |   [yield 9] = 9;\n     |             ^\n  42 | \n  43 |   static [yield 9] = 9;\n  44 | }; <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-async-arrow-function-expression.js: Unexpected token (40:19)\n  38 | \n  39 | let C = class {\n> 40 |   [async () => {}] = () => {\n     |                    ^\n  41 |     return 1;\n  42 |   };\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-generator-function-declaration.js: Unexpected token (41:8)\n  39 | \n  40 | let C = class {\n> 41 |   [g()] = () => {\n     |         ^\n  42 |     return 1;\n  43 |   };\n  44 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-integer-separators.js: Identifier directly after number (40:4)\n  38 | \n  39 | let C = class {\n> 40 |   [1_2_3_4_5_6_7_8] = () => {\n     |     ^\n  41 |     return 1_2_3_4_5_6_7_8;\n  42 |   };\n  43 |  <at omitted>",
  "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js-strict:true": "test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js: SyntaxError: test/language/statements/class/cpn-class-decl-fields-methods-computed-property-name-from-yield-expression.js: Unexpected token (41:12)\n  39 | \n  40 | let C = class {\n> 41 |   [yield 9] = () => {\n     |             ^\n  42 |     return 9;\n  43 |   };\n  44 |  <at omitted>",
  "test/language/statements/class/definition/methods-async-super-call-body.js-strict:true": "test/language/statements/class/definition/methods-async-super-call-body.js: SyntaxError: 'super' keyword unexpected here <at omitted>",
  "test/language/statements/class/definition/methods-gen-no-yield.js-strict:true": "test/language/statements/class/definition/methods-gen-no-yield.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-return.js-strict:true": "test/language/statements/class/definition/methods-gen-return.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-expression-with-rhs.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-expression-with-rhs.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-expression-without-rhs.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-expression-without-rhs.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-generator-method-binding-identifier.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-generator-method-binding-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-literal-property-name.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-literal-property-name.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-property-name.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-property-name.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-statement.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-statement.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-as-yield-operand.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-as-yield-operand.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-newline.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-newline.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/definition/methods-gen-yield-star-before-newline.js-strict:true": "test/language/statements/class/definition/methods-gen-yield-star-before-newline.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-elision.js: Unexpected token (103:13)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   method([...[,]]) {\n      |              ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/meth-ary-ptrn-rest-ary-empty.js: Unexpected token (87:13)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   method([...[]]) {\n     |              ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (103:13)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   method([...[,]] = g()) {\n      |              ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (87:13)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   method([...[]] = iter) {\n     |              ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-elision.js: Unexpected token (103:20)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   static method([...[,]]) {\n      |                     ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/meth-static-ary-ptrn-rest-ary-empty.js: Unexpected token (87:20)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   static method([...[]]) {\n     |                     ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (103:20)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   static method([...[,]] = g()) {\n      |                     ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (87:20)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   static method([...[]] = iter) {\n     |                     ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/meth-static-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n> 83 |   #method([[,] = g()]) {\n     |   ^\n  84 |     assert.sameValue(first, 1);\n  85 |     assert.sameValue(second, 0);\n  86 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (81:2)\n  79 | var callCount = 0;\n  80 | class C {\n> 81 |   #method([[,] = g()]) {\n     |   ^\n  82 |     assert.sameValue(callCount, 0);\n  83 |     callCount = callCount + 1;\n  84 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C {\n> 79 |   #method([[] = function() { initCount += 1; return iter; }()]) {\n     |   ^\n  80 |     assert.sameValue(initCount, 1);\n  81 |     assert.sameValue(iterCount, 0);\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C {\n> 78 |   #method([gen = function* () {}, xGen = function* x() {}]) {\n     |   ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (93:2)\n  91 | var callCount = 0;\n  92 | class C {\n> 93 |   #method([x, y, z]) {\n     |   ^\n  94 |     assert.sameValue(x, 1);\n  95 |     assert.sameValue(y, 2);\n  96 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elision-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elision-exhausted.js: Unexpected character '#' (82:2)\n  80 | var callCount = 0;\n  81 | class C {\n> 82 |   #method([,]) {\n     |   ^\n  83 |     \n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-elision.js: Unexpected character '#' (90:2)\n  88 | var callCount = 0;\n  89 | class C {\n> 90 |   #method([,]) {\n     |   ^\n  91 |     assert.sameValue(first, 1);\n  92 |     assert.sameValue(second, 0);\n  93 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-empty.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n> 74 |   #method([]) {\n     |   ^\n  75 |     assert.sameValue(iterations, 0);\n  76 |     callCount = callCount + 1;\n  77 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (103:2)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   #method([...[,]]) {\n      |   ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   #method([...[]]) {\n     |   ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (83:2)\n  81 | var callCount = 0;\n  82 | class C {\n> 83 |   #method([[,] = g()] = []) {\n     |   ^\n  84 |     assert.sameValue(first, 1);\n  85 |     assert.sameValue(second, 0);\n  86 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (81:2)\n  79 | var callCount = 0;\n  80 | class C {\n> 81 |   #method([[,] = g()] = [[]]) {\n     |   ^\n  82 |     assert.sameValue(callCount, 0);\n  83 |     callCount = callCount + 1;\n  84 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (79:2)\n  77 | var callCount = 0;\n  78 | class C {\n> 79 |   #method([[] = function() { initCount += 1; return iter; }()] = []) {\n     |   ^\n  80 |     assert.sameValue(initCount, 1);\n  81 |     assert.sameValue(iterCount, 0);\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (78:2)\n  76 | var callCount = 0;\n  77 | class C {\n> 78 |   #method([gen = function* () {}, xGen = function* x() {}] = []) {\n     |   ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (93:2)\n  91 | var callCount = 0;\n  92 | class C {\n> 93 |   #method([x, y, z] = [1, 2, 3]) {\n     |   ^\n  94 |     assert.sameValue(x, 1);\n  95 |     assert.sameValue(y, 2);\n  96 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision-exhausted.js: Unexpected character '#' (82:2)\n  80 | var callCount = 0;\n  81 | class C {\n> 82 |   #method([,] = iter) {\n     |   ^\n  83 |     \n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-elision.js: Unexpected character '#' (90:2)\n  88 | var callCount = 0;\n  89 | class C {\n> 90 |   #method([,] = g()) {\n     |   ^\n  91 |     assert.sameValue(first, 1);\n  92 |     assert.sameValue(second, 0);\n  93 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-empty.js: Unexpected character '#' (74:2)\n  72 | var callCount = 0;\n  73 | class C {\n> 74 |   #method([] = iter) {\n     |   ^\n  75 |     assert.sameValue(iterations, 0);\n  76 |     callCount = callCount + 1;\n  77 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (103:2)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   #method([...[,]] = g()) {\n      |   ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (87:2)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   #method([...[]] = iter) {\n     |   ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n> 77 |   #method({ gen = function* () {}, xGen = function* x() {} } = {}) {\n     |   ^\n  78 |     assert.sameValue(gen.name, 'gen');\n  79 |     assert.notSameValue(xGen.name, 'xGen');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (77:2)\n  75 | var callCount = 0;\n  76 | class C {\n> 77 |   #method({ gen = function* () {}, xGen = function* x() {} }) {\n     |   ^\n  78 |     assert.sameValue(gen.name, 'gen');\n  79 |     assert.notSameValue(xGen.name, 'xGen');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n> 83 |   static #method([[,] = g()]) {\n     |          ^\n  84 |     assert.sameValue(first, 1);\n  85 |     assert.sameValue(second, 0);\n  86 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (81:9)\n  79 | var callCount = 0;\n  80 | class C {\n> 81 |   static #method([[,] = g()]) {\n     |          ^\n  82 |     assert.sameValue(callCount, 0);\n  83 |     callCount = callCount + 1;\n  84 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C {\n> 79 |   static #method([[] = function() { initCount += 1; return iter; }()]) {\n     |          ^\n  80 |     assert.sameValue(initCount, 1);\n  81 |     assert.sameValue(iterCount, 0);\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C {\n> 78 |   static #method([gen = function* () {}, xGen = function* x() {}]) {\n     |          ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (93:9)\n  91 | var callCount = 0;\n  92 | class C {\n> 93 |   static #method([x, y, z]) {\n     |          ^\n  94 |     assert.sameValue(x, 1);\n  95 |     assert.sameValue(y, 2);\n  96 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision-exhausted.js: Unexpected character '#' (82:9)\n  80 | var callCount = 0;\n  81 | class C {\n> 82 |   static #method([,]) {\n     |          ^\n  83 |     \n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-elision.js: Unexpected character '#' (90:9)\n  88 | var callCount = 0;\n  89 | class C {\n> 90 |   static #method([,]) {\n     |          ^\n  91 |     assert.sameValue(first, 1);\n  92 |     assert.sameValue(second, 0);\n  93 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-empty.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n> 74 |   static #method([]) {\n     |          ^\n  75 |     assert.sameValue(iterations, 0);\n  76 |     callCount = callCount + 1;\n  77 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (103:9)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   static #method([...[,]]) {\n      |          ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   static #method([...[]]) {\n     |          ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js: Unexpected character '#' (83:9)\n  81 | var callCount = 0;\n  82 | class C {\n> 83 |   static #method([[,] = g()] = []) {\n     |          ^\n  84 |     assert.sameValue(first, 1);\n  85 |     assert.sameValue(second, 0);\n  86 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js: Unexpected character '#' (81:9)\n  79 | var callCount = 0;\n  80 | class C {\n> 81 |   static #method([[,] = g()] = [[]]) {\n     |          ^\n  82 |     assert.sameValue(callCount, 0);\n  83 |     callCount = callCount + 1;\n  84 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js: Unexpected character '#' (79:9)\n  77 | var callCount = 0;\n  78 | class C {\n> 79 |   static #method([[] = function() { initCount += 1; return iter; }()] = []) {\n     |          ^\n  80 |     assert.sameValue(initCount, 1);\n  81 |     assert.sameValue(iterCount, 0);\n  82 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Unexpected character '#' (78:9)\n  76 | var callCount = 0;\n  77 | class C {\n> 78 |   static #method([gen = function* () {}, xGen = function* x() {}] = []) {\n     |          ^\n  79 |     assert.sameValue(gen.name, 'gen');\n  80 |     assert.notSameValue(xGen.name, 'xGen');\n  81 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elem-id-iter-val-array-prototype.js: Unexpected character '#' (93:9)\n  91 | var callCount = 0;\n  92 | class C {\n> 93 |   static #method([x, y, z] = [1, 2, 3]) {\n     |          ^\n  94 |     assert.sameValue(x, 1);\n  95 |     assert.sameValue(y, 2);\n  96 |     assert.sameValue(z, 42); <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision-exhausted.js: Unexpected character '#' (82:9)\n  80 | var callCount = 0;\n  81 | class C {\n> 82 |   static #method([,] = iter) {\n     |          ^\n  83 |     \n  84 |     callCount = callCount + 1;\n  85 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-elision.js: Unexpected character '#' (90:9)\n  88 | var callCount = 0;\n  89 | class C {\n> 90 |   static #method([,] = g()) {\n     |          ^\n  91 |     assert.sameValue(first, 1);\n  92 |     assert.sameValue(second, 0);\n  93 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-empty.js: Unexpected character '#' (74:9)\n  72 | var callCount = 0;\n  73 | class C {\n> 74 |   static #method([] = iter) {\n     |          ^\n  75 |     assert.sameValue(iterations, 0);\n  76 |     callCount = callCount + 1;\n  77 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-elision.js: Unexpected character '#' (103:9)\n  101 | var callCount = 0;\n  102 | class C {\n> 103 |   static #method([...[,]] = g()) {\n      |          ^\n  104 |     assert.sameValue(first, 1);\n  105 |     assert.sameValue(second, 1);\n  106 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-ary-empty.js: Unexpected character '#' (87:9)\n  85 | var callCount = 0;\n  86 | class C {\n> 87 |   static #method([...[]] = iter) {\n     |          ^\n  88 |     assert.sameValue(iterations, 1);\n  89 |     callCount = callCount + 1;\n  90 |   } <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n> 77 |   static #method({ gen = function* () {}, xGen = function* x() {} } = {}) {\n     |          ^\n  78 |     assert.sameValue(gen.name, 'gen');\n  79 |     assert.notSameValue(xGen.name, 'xGen');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js: SyntaxError: test/language/statements/class/dstr/private-meth-static-obj-ptrn-id-init-fn-name-gen.js: Unexpected character '#' (77:9)\n  75 | var callCount = 0;\n  76 | class C {\n> 77 |   static #method({ gen = function* () {}, xGen = function* x() {} }) {\n     |          ^\n  78 |     assert.sameValue(gen.name, 'gen');\n  79 |     assert.notSameValue(xGen.name, 'xGen');\n  80 |     callCount = callCount + 1; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-computed-names.js: Unexpected token (28:26)\n  26 | \n  27 | class C {\n> 28 |   *m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                           ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-computed-symbol-names.js: Unexpected token (29:31)\n  27 | \n  28 | class C {\n> 29 |   *m() { return 42; } [x]; [y] = 42;\n     |                                ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:22)\n  66 | \n  67 | class C {\n> 68 |   *m() { return 42; } #\\u{6F};\n     |                       ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   *m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-literal-names.js: Unexpected token (28:27)\n  26 | \n  27 | class C {\n> 28 |   *m() { return 42; } a; b = 42;\n     |                            ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-private-field-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-private-field-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-private-field-usage.js: Unexpected character '#' (27:22)\n  25 | \n  26 | class C {\n> 27 |   *m() { return 42; } #m = 'test262';;\n     |                       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:26)\n  25 | \n  26 | class C {\n> 27 |   *m() { return 42; } get #m() { return 'test262'; };\n     |                           ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-private-method-usage.js: Unexpected character '#' (27:22)\n  25 | \n  26 | class C {\n> 27 |   *m() { return 42; } #m() { return 'test262'; };\n     |                       ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-private-names.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-private-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-private-names.js: Unexpected character '#' (29:22)\n  27 | \n  28 | class C {\n> 29 |   *m() { return 42; } #x; #y;\n     |                       ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:24)\n  60 | \n  61 | class C {\n> 62 |   *m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                         ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-getter.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-getter.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:22)\n  57 | \n  58 | class C {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-method.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-method.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-method.js: Unexpected character '#' (59:22)\n  57 | \n  58 | class C {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:22)\n  57 | \n  58 | class C {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                       ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-private-setter.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-private-setter.js: Unexpected character '#' (59:22)\n  57 | \n  58 | class C {\n> 59 |   *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                       ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                       ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                       ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                       ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:22)\n  58 | \n  59 | class C {\n> 60 |   *m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                       ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:35)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static async * #$(value) {\n     |                                    ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:35)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static async * #$(value) {\n     |                                    ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:35)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static async #$(value) {\n     |                                    ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:35)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static async #$(value) {\n     |                                    ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:31)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static * #$(value) {\n     |                                ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:31)\n  62 | \n  63 | class C {\n> 64 |   *m() { return 42; } static * #$(value) {\n     |                                ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$(value) {\n     |                              ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$(value) {\n     |                              ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                              ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:29)\n  59 | \n  60 | class C {\n> 61 |   *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                              ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-static-private-fields.js: Unexpected character '#' (29:29)\n  27 | \n  28 | class C {\n> 29 |   *m() { return 42; } static #x; static #y;\n     |                              ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:29)\n  27 | \n  28 | class C {\n> 29 |   *m() { return 42; } static #xVal; static #yVal;\n     |                              ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   *m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-gen-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-gen-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-gen-string-literal-names.js: Unexpected token (26:36)\n  24 | \n  25 | class C {\n> 26 |   *m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                     ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:34)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static async * #$(value) {\n     |                                   ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:34)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static async * #$(value) {\n     |                                   ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:34)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static async #$(value) {\n     |                                   ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:34)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static async #$(value) {\n     |                                   ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:30)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:30)\n  62 | \n  63 | class C {\n> 64 |   m() { return 42; } static * #$(value) {\n     |                               ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-computed-names.js: Unexpected token (28:38)\n  26 | \n  27 | class C {\n> 28 |   static async m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                       ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-computed-symbol-names.js: Unexpected token (29:43)\n  27 | \n  28 | class C {\n> 29 |   static async m() { return 42; } [x]; [y] = 42;\n     |                                            ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:34)\n  66 | \n  67 | class C {\n> 68 |   static async m() { return 42; } #\\u{6F};\n     |                                   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   static async m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-literal-names.js: Unexpected token (28:39)\n  26 | \n  27 | class C {\n> 28 |   static async m() { return 42; } a; b = 42;\n     |                                        ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-private-field-usage.js: Unexpected character '#' (27:34)\n  25 | \n  26 | class C {\n> 27 |   static async m() { return 42; } #m = 'test262';;\n     |                                   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-private-method-getter-usage.js: Unexpected character '#' (27:38)\n  25 | \n  26 | class C {\n> 27 |   static async m() { return 42; } get #m() { return 'test262'; };\n     |                                       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-private-method-usage.js: Unexpected character '#' (27:34)\n  25 | \n  26 | class C {\n> 27 |   static async m() { return 42; } #m() { return 'test262'; };\n     |                                   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-private-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-private-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-private-names.js: Unexpected character '#' (29:34)\n  27 | \n  28 | class C {\n> 29 |   static async m() { return 42; } #x; #y;\n     |                                   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-field-identifier-initializer.js: Unexpected token (62:36)\n  60 | \n  61 | class C {\n> 62 |   static async m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                                     ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-getter.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method-alt.js: Unexpected character '#' (59:34)\n  57 | \n  58 | class C {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-method.js: Unexpected character '#' (59:34)\n  57 | \n  58 | class C {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter-alt.js: Unexpected character '#' (59:34)\n  57 | \n  58 | class C {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                                   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-private-setter.js: Unexpected character '#' (59:34)\n  57 | \n  58 | class C {\n> 59 |   static async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                                   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                                   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                                   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                                   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-privatename-identifier.js: Unexpected character '#' (60:34)\n  58 | \n  59 | class C {\n> 60 |   static async m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                                   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:47)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static async * #$(value) {\n     |                                                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:47)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static async * #$(value) {\n     |                                                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:47)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static async #$(value) {\n     |                                                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:47)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static async #$(value) {\n     |                                                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:43)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static * #$(value) {\n     |                                            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:43)\n  62 | \n  63 | class C {\n> 64 |   static async m() { return 42; } static * #$(value) {\n     |                                            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$(value) {\n     |                                          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$(value) {\n     |                                          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:41)\n  59 | \n  60 | class C {\n> 61 |   static async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-static-private-fields.js: Unexpected character '#' (29:41)\n  27 | \n  28 | class C {\n> 29 |   static async m() { return 42; } static #x; static #y;\n     |                                          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods-with-fields.js: Unexpected character '#' (29:41)\n  27 | \n  28 | class C {\n> 29 |   static async m() { return 42; } static #xVal; static #yVal;\n     |                                          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   static async m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-async-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-async-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-async-method-string-literal-names.js: Unexpected token (26:48)\n  24 | \n  25 | class C {\n> 26 |   static async m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                                 ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-computed-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-computed-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-computed-names.js: Unexpected token (28:33)\n  26 | \n  27 | class C {\n> 28 |   static *m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                  ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-computed-symbol-names.js: Unexpected token (29:38)\n  27 | \n  28 | class C {\n> 29 |   static *m() { return 42; } [x]; [y] = 42;\n     |                                       ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:29)\n  66 | \n  67 | class C {\n> 68 |   static *m() { return 42; } #\\u{6F};\n     |                              ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-literal-names-asi.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   static *m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-literal-names.js: Unexpected token (28:34)\n  26 | \n  27 | class C {\n> 28 |   static *m() { return 42; } a; b = 42;\n     |                                   ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-private-field-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-private-field-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-private-field-usage.js: Unexpected character '#' (27:29)\n  25 | \n  26 | class C {\n> 27 |   static *m() { return 42; } #m = 'test262';;\n     |                              ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-private-method-getter-usage.js: Unexpected character '#' (27:33)\n  25 | \n  26 | class C {\n> 27 |   static *m() { return 42; } get #m() { return 'test262'; };\n     |                                  ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-private-method-usage.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-private-method-usage.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-private-method-usage.js: Unexpected character '#' (27:29)\n  25 | \n  26 | class C {\n> 27 |   static *m() { return 42; } #m() { return 'test262'; };\n     |                              ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-private-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-private-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-private-names.js: Unexpected character '#' (29:29)\n  27 | \n  28 | class C {\n> 29 |   static *m() { return 42; } #x; #y;\n     |                              ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-field-identifier-initializer.js: Unexpected token (62:31)\n  60 | \n  61 | class C {\n> 62 |   static *m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                                ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-getter.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-method-alt.js: Unexpected character '#' (59:29)\n  57 | \n  58 | class C {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-method.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-method.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-method.js: Unexpected character '#' (59:29)\n  57 | \n  58 | class C {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter-alt.js: Unexpected character '#' (59:29)\n  57 | \n  58 | class C {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                              ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-private-setter.js: Unexpected character '#' (59:29)\n  57 | \n  58 | class C {\n> 59 |   static *m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                              ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                              ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                              ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                              ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-privatename-identifier.js: Unexpected character '#' (60:29)\n  58 | \n  59 | class C {\n> 60 |   static *m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                              ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:42)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static async * #$(value) {\n     |                                           ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:42)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static async * #$(value) {\n     |                                           ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:42)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static async #$(value) {\n     |                                           ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:42)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static async #$(value) {\n     |                                           ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:38)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static * #$(value) {\n     |                                       ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:38)\n  62 | \n  63 | class C {\n> 64 |   static *m() { return 42; } static * #$(value) {\n     |                                       ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$(value) {\n     |                                     ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$(value) {\n     |                                     ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                     ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:36)\n  59 | \n  60 | class C {\n> 61 |   static *m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                     ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-static-private-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-static-private-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-static-private-fields.js: Unexpected character '#' (29:36)\n  27 | \n  28 | class C {\n> 29 |   static *m() { return 42; } static #x; static #y;\n     |                                     ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:36)\n  27 | \n  28 | class C {\n> 29 |   static *m() { return 42; } static #xVal; static #yVal;\n     |                                     ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-static-private-methods.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-static-private-methods.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   static *m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-gen-string-literal-names.js-strict:true": "test/language/statements/class/elements/after-same-line-static-gen-string-literal-names.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-gen-string-literal-names.js: Unexpected token (26:43)\n  24 | \n  25 | class C {\n> 26 |   static *m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                            ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:41)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static async * #$(value) {\n     |                                          ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:41)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static async * #$(value) {\n     |                                          ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:41)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static async #$(value) {\n     |                                          ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:41)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static async #$(value) {\n     |                                          ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:37)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/after-same-line-static-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:37)\n  62 | \n  63 | class C {\n> 64 |   static m() { return 42; } static * #$(value) {\n     |                                      ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-arguments-from-parent-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     let a = arguments;\n  29 |       return async () => a === arguments;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-arrow-returns-newtarget.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async () => new.target;\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-arrow.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-arrow.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-arrow.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async () => x;\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-arguments-from-own-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     let a = arguments;\n  29 |       return async function() { return a === arguments; };\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-function-returns-newtarget.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async function() { return new.target; };\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method-static/returns-async-function.js-strict:true": "test/language/statements/class/elements/async-private-method-static/returns-async-function.js: SyntaxError: test/language/statements/class/elements/async-private-method-static/returns-async-function.js: Unexpected character '#' (27:15)\n  25 | \n  26 | class C {\n> 27 |   static async #method(x) {\n     |                ^\n  28 |     return async function() { return x; };\n  29 |   }\n  30 |   static async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-arguments-from-parent-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     let a = arguments;\n  29 |       return async () => a === arguments;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-arrow-returns-newtarget.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async () => new.target;\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-arrow.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-arrow.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-arrow.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async () => x;\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-function-returns-arguments-from-own-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     let a = arguments;\n  29 |       return async function() { return a === arguments; };\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-function-returns-newtarget.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-function-returns-newtarget.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-function-returns-newtarget.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async function() { return new.target; };\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/statements/class/elements/async-private-method/returns-async-function.js-strict:true": "test/language/statements/class/elements/async-private-method/returns-async-function.js: SyntaxError: test/language/statements/class/elements/async-private-method/returns-async-function.js: Unexpected character '#' (27:8)\n  25 | \n  26 | class C {\n> 27 |   async #method(x) {\n     |         ^\n  28 |     return async function() { return x; };\n  29 |   }\n  30 |   async method(x) { <at omitted>",
  "test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-multiple.js-strict:true": "test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-multiple.js: SyntaxError: test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-multiple.js: Unexpected character '#' (36:12)\n  34 | \n  35 | class C {\n> 36 |     static *#gen() {\n     |             ^\n  37 |         callCount += 1;\n  38 |         yield [...yield yield];\n  39 |     } <at omitted>",
  "test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-single.js-strict:true": "test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-single.js: SyntaxError: test/language/statements/class/elements/gen-private-method-static/yield-spread-arr-single.js: Unexpected character '#' (33:12)\n  31 | \n  32 | class C {\n> 33 |     static *#gen() {\n     |             ^\n  34 |         callCount += 1;\n  35 |         yield [...yield];\n  36 |     } <at omitted>",
  "test/language/statements/class/elements/gen-private-method-static/yield-spread-obj.js-strict:true": "test/language/statements/class/elements/gen-private-method-static/yield-spread-obj.js: SyntaxError: test/language/statements/class/elements/gen-private-method-static/yield-spread-obj.js: Unexpected character '#' (34:12)\n  32 | \n  33 | class C {\n> 34 |     static *#gen() {\n     |             ^\n  35 |         callCount += 1;\n  36 |         yield {\n  37 |             ...yield, <at omitted>",
  "test/language/statements/class/elements/gen-private-method/yield-spread-arr-multiple.js-strict:true": "test/language/statements/class/elements/gen-private-method/yield-spread-arr-multiple.js: SyntaxError: test/language/statements/class/elements/gen-private-method/yield-spread-arr-multiple.js: Unexpected character '#' (36:5)\n  34 | \n  35 | class C {\n> 36 |     *#gen() {\n     |      ^\n  37 |         callCount += 1;\n  38 |         yield [...yield yield];\n  39 |     } <at omitted>",
  "test/language/statements/class/elements/gen-private-method/yield-spread-arr-single.js-strict:true": "test/language/statements/class/elements/gen-private-method/yield-spread-arr-single.js: SyntaxError: test/language/statements/class/elements/gen-private-method/yield-spread-arr-single.js: Unexpected character '#' (33:5)\n  31 | \n  32 | class C {\n> 33 |     *#gen() {\n     |      ^\n  34 |         callCount += 1;\n  35 |         yield [...yield];\n  36 |     } <at omitted>",
  "test/language/statements/class/elements/gen-private-method/yield-spread-obj.js-strict:true": "test/language/statements/class/elements/gen-private-method/yield-spread-obj.js: SyntaxError: test/language/statements/class/elements/gen-private-method/yield-spread-obj.js: Unexpected character '#' (34:5)\n  32 | \n  33 | class C {\n> 34 |     *#gen() {\n     |      ^\n  35 |         callCount += 1;\n  36 |         yield {\n  37 |             ...yield, <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async * #$(value) {\n  67 |     yield * await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async * #$(value) {\n  67 |     yield * await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async #$(value) {\n  67 |     return await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-async-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static async #$(value) {\n  67 |     return await value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; <at omitted>",
  "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected token (64:6)\n  62 | \n  63 | class C {\n> 64 |   foo = \"foobar\";\n     |       ^\n  65 |   m() { return 42 }\n  66 |   static * #$(value) {\n  67 |     yield * value; <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-computed-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-computed-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |       ^\n  29 |   *m() { return 42; }\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n> 29 |   [x]; [y] = 42;\n     |            ^\n  30 |   *m() { return 42; }\n  31 |   \n  32 | } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n> 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-literal-names-asi.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n> 27 |   b = 42;;\n     |     ^\n  28 |   *m() { return 42; }\n  29 |   \n  30 | } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn;\n  30 |   *m() { return 42; }\n  31 |    <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-private-field-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-private-field-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n> 27 |   #m = 'test262';;\n     |   ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n> 27 |   get #m() { return 'test262'; };\n     |       ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-private-method-usage.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-private-method-usage.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n> 27 |   #m() { return 'test262'; };\n     |   ^\n  28 |   *m() { return 42; }\n  29 |   method() {\n  30 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-private-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-private-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n> 29 |   #x; #y;\n     |   ^\n  30 |   *m() { return 42; }\n  31 |   x() {\n  32 |     this.#x = 42; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n> 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |     ^\n  63 |   *m() { return 42; }\n  64 |   \n  65 | } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-getter.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-method.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-method.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-private-setter.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $() {\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |   ^\n  61 |   *m() { return 42; }\n  62 |   $(value) {\n  63 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     C.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $() {\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |          ^\n  62 |   *m() { return 42; }\n  63 |   static $(value) {\n  64 |     this.#$ = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-static-private-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-static-private-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n> 29 |   static #x; static #y;\n     |          ^\n  30 |   *m() { return 42; }\n  31 |   static x() {\n  32 |     this.#x = 42; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n> 29 |   static #xVal; static #yVal;\n     |          ^\n  30 |   *m() { return 42; }\n  31 |   static #x(value) {\n  32 |     this.#xVal = value; <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-static-private-methods.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-static-private-methods.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-static-private-methods.js: Unexpected character '#' (31:9)\n  29 |   ;\n  30 |   *m() { return 42; }\n> 31 |   static #x(value) {\n     |          ^\n  32 |     return value / 2;\n  33 |   }\n  34 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-gen-string-literal-names.js-strict:true": "test/language/statements/class/elements/new-sc-line-gen-string-literal-names.js: SyntaxError: test/language/statements/class/elements/new-sc-line-gen-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42;\n  28 |   *m() { return 42; }\n  29 |    <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/new-sc-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/private-async-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-async-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-async-generator-method-name.js: Unexpected token (52:8)\n  50 | \n  51 | class C {\n> 52 |   async * #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-async-method-name.js-strict:true": "test/language/statements/class/elements/private-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-async-method-name.js: Unexpected character '#' (52:8)\n  50 | \n  51 | class C {\n> 52 |   async #method() {};\n     |         ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-field-as-async-arrow-function.js-strict:true": "test/language/statements/class/elements/private-field-as-async-arrow-function.js: SyntaxError: test/language/statements/class/elements/private-field-as-async-arrow-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n> 26 |   #m = async () => 'test262';\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-field-as-async-function.js-strict:true": "test/language/statements/class/elements/private-field-as-async-function.js: SyntaxError: test/language/statements/class/elements/private-field-as-async-function.js: Unexpected character '#' (26:2)\n  24 | \n  25 | class C {\n> 26 |   #m = async function() { return 'test262'; };\n     |   ^\n  27 | \n  28 |   method() {\n  29 |     return this.#m(); <at omitted>",
  "test/language/statements/class/elements/private-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-generator-method-name.js: Unexpected character '#' (52:4)\n  50 | \n  51 | class C {\n> 52 |   * #method() {};\n     |     ^\n  53 | \n  54 |   getPrivateMethod() {\n  55 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-getter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-getter-is-not-a-own-property.js: TypeError: Object has no member '__lookupGetter__' <at omitted>",
  "test/language/statements/class/elements/private-methods/prod-private-async-method.js-strict:true": "test/language/statements/class/elements/private-methods/prod-private-async-method.js: SyntaxError: test/language/statements/class/elements/private-methods/prod-private-async-method.js: Unexpected character '#' (89:8)\n  87 | \n  88 | class C {\n> 89 |   async #m() { return 42; }\n     |         ^\n  90 | \n  91 | \n  92 |   get ref() { return this.#m; } <at omitted>",
  "test/language/statements/class/elements/private-methods/prod-private-generator.js-strict:true": "test/language/statements/class/elements/private-methods/prod-private-generator.js: SyntaxError: test/language/statements/class/elements/private-methods/prod-private-generator.js: Unexpected character '#' (87:4)\n  85 | \n  86 | class C {\n> 87 |   * #m() { return 42; }\n     |     ^\n  88 | \n  89 | \n  90 |   get ref() { return this.#m; } <at omitted>",
  "test/language/statements/class/elements/private-setter-is-not-a-own-property.js-strict:true": "test/language/statements/class/elements/private-setter-is-not-a-own-property.js: TypeError: Object has no member '__lookupSetter__' <at omitted>",
  "test/language/statements/class/elements/private-static-async-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-static-async-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-async-generator-method-name.js: Unexpected token (54:15)\n  52 | \n  53 | class C {\n> 54 |   static async * #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-static-async-method-name.js-strict:true": "test/language/statements/class/elements/private-static-async-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-async-method-name.js: Unexpected character '#' (54:15)\n  52 | \n  53 | class C {\n> 54 |   static async #method() {};\n     |                ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/private-static-generator-method-name.js-strict:true": "test/language/statements/class/elements/private-static-generator-method-name.js: SyntaxError: test/language/statements/class/elements/private-static-generator-method-name.js: Unexpected character '#' (54:11)\n  52 | \n  53 | class C {\n> 54 |   static * #method() {};\n     |            ^\n  55 | \n  56 |   static getPrivateMethod() {\n  57 |     return this.#method; <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (63:15)\n  61 | \n  62 | class C {\n> 63 |   static async * #$(value) {\n     |                ^\n  64 |     yield * await value;\n  65 |   }\n  66 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (63:15)\n  61 | \n  62 | class C {\n> 63 |   static async * #$(value) {\n     |                ^\n  64 |     yield * await value;\n  65 |   }\n  66 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (63:15)\n  61 | \n  62 | class C {\n> 63 |   static async #$(value) {\n     |                ^\n  64 |     return await value;\n  65 |   }\n  66 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (63:15)\n  61 | \n  62 | class C {\n> 63 |   static async #$(value) {\n     |                ^\n  64 |     return await value;\n  65 |   }\n  66 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (63:11)\n  61 | \n  62 | class C {\n> 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/regular-definitions-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (63:11)\n  61 | \n  62 | class C {\n> 63 |   static * #$(value) {\n     |            ^\n  64 |     yield * value;\n  65 |   }\n  66 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-computed-names.js-strict:true": "test/language/statements/class/elements/same-line-async-method-computed-names.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-computed-names.js: Unexpected token (28:31)\n  26 | \n  27 | class C {\n> 28 |   async m() { return 42; } [x] = 42; [10] = \"meep\"; [\"not initialized\"];\n     |                                ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/same-line-async-method-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-computed-symbol-names.js: Unexpected token (29:36)\n  27 | \n  28 | class C {\n> 29 |   async m() { return 42; } [x]; [y] = 42;\n     |                                     ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:27)\n  66 | \n  67 | class C {\n> 68 |   async m() { return 42; } #\\u{6F};\n     |                            ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-literal-names-asi.js-strict:true": "test/language/statements/class/elements/same-line-async-method-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   async m() { return 42; } a\n> 27 |   b = 42;;\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-async-method-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-literal-names.js: Unexpected token (28:32)\n  26 | \n  27 | class C {\n> 28 |   async m() { return 42; } a; b = 42;\n     |                                 ^\n  29 |   c = fn;\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-private-field-usage.js-strict:true": "test/language/statements/class/elements/same-line-async-method-private-field-usage.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-private-field-usage.js: Unexpected character '#' (27:27)\n  25 | \n  26 | class C {\n> 27 |   async m() { return 42; } #m = 'test262';;\n     |                            ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/same-line-async-method-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-private-method-getter-usage.js: Unexpected character '#' (27:31)\n  25 | \n  26 | class C {\n> 27 |   async m() { return 42; } get #m() { return 'test262'; };\n     |                                ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-private-method-usage.js-strict:true": "test/language/statements/class/elements/same-line-async-method-private-method-usage.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-private-method-usage.js: Unexpected character '#' (27:27)\n  25 | \n  26 | class C {\n> 27 |   async m() { return 42; } #m() { return 'test262'; };\n     |                            ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-private-names.js-strict:true": "test/language/statements/class/elements/same-line-async-method-private-names.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-private-names.js: Unexpected character '#' (29:27)\n  27 | \n  28 | class C {\n> 29 |   async m() { return 42; } #x; #y;\n     |                            ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-field-identifier-initializer.js: Unexpected token (62:29)\n  60 | \n  61 | class C {\n> 62 |   async m() { return 42; } $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1;\n     |                              ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-getter-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-getter.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-getter.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-method-alt.js: Unexpected character '#' (59:27)\n  57 | \n  58 | class C {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-method.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-method.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-method.js: Unexpected character '#' (59:27)\n  57 | \n  58 | class C {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-setter-alt.js: Unexpected character '#' (59:27)\n  57 | \n  58 | class C {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |                            ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-private-setter.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-private-setter.js: Unexpected character '#' (59:27)\n  57 | \n  58 | class C {\n> 59 |   async m() { return 42; } #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |                            ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J;\n     |                            ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1;\n     |                            ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1;\n     |                            ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-privatename-identifier.js: Unexpected character '#' (60:27)\n  58 | \n  59 | class C {\n> 60 |   async m() { return 42; } #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J;\n     |                            ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:40)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static async * #$(value) {\n     |                                         ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:40)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static async * #$(value) {\n     |                                         ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:40)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static async #$(value) {\n     |                                         ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:40)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static async #$(value) {\n     |                                         ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:36)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static * #$(value) {\n     |                                     ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:36)\n  62 | \n  63 | class C {\n> 64 |   async m() { return 42; } static * #$(value) {\n     |                                     ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$(value) {\n     |                                   ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$(value) {\n     |                                   ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1;\n     |                                   ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-rs-static-privatename-identifier.js: Unexpected character '#' (61:34)\n  59 | \n  60 | class C {\n> 61 |   async m() { return 42; } static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J;\n     |                                   ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-static-private-fields.js-strict:true": "test/language/statements/class/elements/same-line-async-method-static-private-fields.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-static-private-fields.js: Unexpected character '#' (29:34)\n  27 | \n  28 | class C {\n> 29 |   async m() { return 42; } static #x; static #y;\n     |                                   ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/same-line-async-method-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-static-private-methods-with-fields.js: Unexpected character '#' (29:34)\n  27 | \n  28 | class C {\n> 29 |   async m() { return 42; } static #xVal; static #yVal;\n     |                                   ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-static-private-methods.js-strict:true": "test/language/statements/class/elements/same-line-async-method-static-private-methods.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   async m() { return 42; } ;\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-async-method-string-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-async-method-string-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-async-method-string-literal-names.js: Unexpected token (26:41)\n  24 | \n  25 | class C {\n> 26 |   async m() { return 42; } 'a'; \"b\"; 'c' = 39;\n     |                                          ^\n  27 |   \"d\" = 42;\n  28 |   \n  29 | } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-computed-names.js-strict:true": "test/language/statements/class/elements/same-line-gen-computed-names.js: SyntaxError: test/language/statements/class/elements/same-line-gen-computed-names.js: Unexpected token (28:6)\n  26 | \n  27 | class C {\n> 28 |   [x] = 42; [10] = \"meep\"; [\"not initialized\"]; *m() { return 42; }\n     |       ^\n  29 |   \n  30 | }\n  31 |  <at omitted>",
  "test/language/statements/class/elements/same-line-gen-computed-symbol-names.js-strict:true": "test/language/statements/class/elements/same-line-gen-computed-symbol-names.js: SyntaxError: test/language/statements/class/elements/same-line-gen-computed-symbol-names.js: Unexpected token (29:11)\n  27 | \n  28 | class C {\n> 29 |   [x]; [y] = 42; *m() { return 42; }\n     |            ^\n  30 |   \n  31 | }\n  32 |  <at omitted>",
  "test/language/statements/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js-strict:true": "test/language/statements/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: SyntaxError: test/language/statements/class/elements/same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js: Unexpected character '#' (68:2)\n  66 | \n  67 | class C {\n> 68 |   #\\u{6F};\n     |   ^\n  69 |   #\\u2118;\n  70 |   #ZW_\\u200C_NJ;\n  71 |   #ZW_\\u200D_J;; *m() { return 42; } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-literal-names-asi.js-strict:true": "test/language/statements/class/elements/same-line-gen-literal-names-asi.js: SyntaxError: test/language/statements/class/elements/same-line-gen-literal-names-asi.js: Unexpected token (27:4)\n  25 | class C {\n  26 |   a\n> 27 |   b = 42;; *m() { return 42; }\n     |     ^\n  28 |   \n  29 | }\n  30 |  <at omitted>",
  "test/language/statements/class/elements/same-line-gen-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-gen-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-gen-literal-names.js: Unexpected token (28:7)\n  26 | \n  27 | class C {\n> 28 |   a; b = 42;\n     |        ^\n  29 |   c = fn; *m() { return 42; }\n  30 |   \n  31 | } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-private-field-usage.js-strict:true": "test/language/statements/class/elements/same-line-gen-private-field-usage.js: SyntaxError: test/language/statements/class/elements/same-line-gen-private-field-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n> 27 |   #m = 'test262';; *m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-private-method-getter-usage.js-strict:true": "test/language/statements/class/elements/same-line-gen-private-method-getter-usage.js: SyntaxError: test/language/statements/class/elements/same-line-gen-private-method-getter-usage.js: Unexpected character '#' (27:6)\n  25 | \n  26 | class C {\n> 27 |   get #m() { return 'test262'; }; *m() { return 42; }\n     |       ^\n  28 |   method() {\n  29 |     return this.#m;\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-private-method-usage.js-strict:true": "test/language/statements/class/elements/same-line-gen-private-method-usage.js: SyntaxError: test/language/statements/class/elements/same-line-gen-private-method-usage.js: Unexpected character '#' (27:2)\n  25 | \n  26 | class C {\n> 27 |   #m() { return 'test262'; }; *m() { return 42; }\n     |   ^\n  28 |   method() {\n  29 |     return this.#m();\n  30 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-private-names.js-strict:true": "test/language/statements/class/elements/same-line-gen-private-names.js: SyntaxError: test/language/statements/class/elements/same-line-gen-private-names.js: Unexpected character '#' (29:2)\n  27 | \n  28 | class C {\n> 29 |   #x; #y; *m() { return 42; }\n     |   ^\n  30 |   x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-field-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-field-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-field-identifier-initializer.js: Unexpected token (62:4)\n  60 | \n  61 | class C {\n> 62 |   $ = 1; _ = 1; \\u{6F} = 1; \\u2118 = 1; ZW_\\u200C_NJ = 1; ZW_\\u200D_J = 1; *m() { return 42; }\n     |     ^\n  63 |   \n  64 | }\n  65 |  <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-field-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-field-identifier.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-getter-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-getter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-getter-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-getter.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-getter.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-getter.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  61 |   get #$() {\n  62 |     return this.#$_;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-method-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-method-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-method-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-method.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-method.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-method.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   #$() {\n  61 |     return this.#$_;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-setter-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-setter-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-setter-alt.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #℘_; #ZW_‌_NJ_; #ZW_‍_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-private-setter.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-private-setter.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-private-setter.js: Unexpected character '#' (59:2)\n  57 | \n  58 | class C {\n> 59 |   #$_; #__; #\\u{6F}_; #\\u2118_; #ZW_\\u200C_NJ_; #ZW_\\u200D_J_;\n     |   ^\n  60 |   set #$(value) {\n  61 |     this.#$_ = value;\n  62 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$; #_; #\\u{6F}; #℘; #ZW_‌_NJ; #ZW_‍_J; *m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer-alt.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #℘ = 1; #ZW_‌_NJ = 1; #ZW_‍_J = 1; *m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-privatename-identifier-initializer.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$ = 1; #_ = 1; #\\u{6F} = 1; #\\u2118 = 1; #ZW_\\u200C_NJ = 1; #ZW_\\u200D_J = 1; *m() { return 42; }\n     |   ^\n  61 |   $() {\n  62 |     return this.#$;\n  63 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-privatename-identifier.js: Unexpected character '#' (60:2)\n  58 | \n  59 | class C {\n> 60 |   #$; #_; #\\u{6F}; #\\u2118; #ZW_\\u200C_NJ; #ZW_\\u200D_J; *m() { return 42; }\n     |   ^\n  61 |   $(value) {\n  62 |     this.#$ = value;\n  63 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-method-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$(value) {\n     |          ^\n  62 |     return value;\n  63 |   }\n  64 |   static #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #℘; static #ZW_‌_NJ; static #ZW_‍_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     C.#$ = value;\n  64 |     return C.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return C.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer-alt.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #℘ = 1; static #ZW_‌_NJ = 1; static #ZW_‍_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier-initializer.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$ = 1; static #_ = 1; static #\\u{6F} = 1; static #\\u2118 = 1; static #ZW_\\u200C_NJ = 1; static #ZW_\\u200D_J = 1; *m() { return 42; }\n     |          ^\n  62 |   static $() {\n  63 |     return this.#$;\n  64 |   } <at omitted>",
  "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-gen-rs-static-privatename-identifier.js: Unexpected character '#' (61:9)\n  59 | \n  60 | class C {\n> 61 |   static #$; static #_; static #\\u{6F}; static #\\u2118; static #ZW_\\u200C_NJ; static #ZW_\\u200D_J; *m() { return 42; }\n     |          ^\n  62 |   static $(value) {\n  63 |     this.#$ = value;\n  64 |     return this.#$; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-static-private-fields.js-strict:true": "test/language/statements/class/elements/same-line-gen-static-private-fields.js: SyntaxError: test/language/statements/class/elements/same-line-gen-static-private-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n> 29 |   static #x; static #y; *m() { return 42; }\n     |          ^\n  30 |   static x() {\n  31 |     this.#x = 42;\n  32 |     return this.#x; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-static-private-methods-with-fields.js-strict:true": "test/language/statements/class/elements/same-line-gen-static-private-methods-with-fields.js: SyntaxError: test/language/statements/class/elements/same-line-gen-static-private-methods-with-fields.js: Unexpected character '#' (29:9)\n  27 | \n  28 | class C {\n> 29 |   static #xVal; static #yVal; *m() { return 42; }\n     |          ^\n  30 |   static #x(value) {\n  31 |     this.#xVal = value;\n  32 |     return this.#xVal; <at omitted>",
  "test/language/statements/class/elements/same-line-gen-static-private-methods.js-strict:true": "test/language/statements/class/elements/same-line-gen-static-private-methods.js: SyntaxError: test/language/statements/class/elements/same-line-gen-static-private-methods.js: Unexpected character '#' (30:9)\n  28 | class C {\n  29 |   ; *m() { return 42; }\n> 30 |   static #x(value) {\n     |          ^\n  31 |     return value / 2;\n  32 |   }\n  33 |   static #y(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-gen-string-literal-names.js-strict:true": "test/language/statements/class/elements/same-line-gen-string-literal-names.js: SyntaxError: test/language/statements/class/elements/same-line-gen-string-literal-names.js: Unexpected token (26:16)\n  24 | \n  25 | class C {\n> 26 |   'a'; \"b\"; 'c' = 39;\n     |                 ^\n  27 |   \"d\" = 42; *m() { return 42; }\n  28 |   \n  29 | } <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async * #$(value) {\n     |                ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:15)\n  62 | \n  63 | class C {\n> 64 |   static async #$(value) {\n     |                ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/same-line-method-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:11)\n  62 | \n  63 | class C {\n> 64 |   static * #$(value) {\n     |            ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-async-meth-prototype.js: Unexpected character '#' (20:15)\n  18 | \n  19 | class C {\n> 20 |   static async #prototype() {}\n     |                ^\n  21 | }\n  22 |  <at omitted>",
  "test/language/statements/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js-strict:true": "test/language/statements/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js: SyntaxError: test/language/statements/class/elements/syntax/valid/grammar-static-private-gen-meth-prototype.js: Unexpected character '#' (20:11)\n  18 | \n  19 | class C {\n> 20 |   static * #prototype() {}\n     |            ^\n  21 | }\n  22 |  <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js: Unexpected token (64:21)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async * #$(value) {\n     |                      ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js: Unexpected token (64:21)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async * #$(value) {\n     |                      ^\n  65 |     yield * await value;\n  66 |   }\n  67 |   static async * #_(value) { <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js: Unexpected character '#' (64:21)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) {\n     |                      ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-async-method-privatename-identifier.js: Unexpected character '#' (64:21)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static async #$(value) {\n     |                      ^\n  65 |     return await value;\n  66 |   }\n  67 |   static async #_(value) { <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js: Unexpected character '#' (64:17)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js-strict:true": "test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: SyntaxError: test/language/statements/class/elements/wrapped-in-sc-rs-static-generator-method-privatename-identifier.js: Unexpected character '#' (64:17)\n  62 | class C {\n  63 |   ;;;;\n> 64 |   ;;;;;;static * #$(value) {\n     |                  ^\n  65 |     yield * value;\n  66 |   }\n  67 |   static * #_(value) { <at omitted>",
  "test/language/statements/class/params-dflt-gen-meth-args-unmapped.js-strict:true": "test/language/statements/class/params-dflt-gen-meth-args-unmapped.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/params-dflt-gen-meth-ref-arguments.js-strict:true": "test/language/statements/class/params-dflt-gen-meth-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/statements/class/params-dflt-gen-meth-static-args-unmapped.js-strict:true": "test/language/statements/class/params-dflt-gen-meth-static-args-unmapped.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/params-dflt-gen-meth-static-ref-arguments.js-strict:true": "test/language/statements/class/params-dflt-gen-meth-static-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/statements/class/scope-gen-meth-paramsbody-var-close.js-strict:true": "test/language/statements/class/scope-gen-meth-paramsbody-var-close.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/scope-gen-meth-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-gen-meth-paramsbody-var-open.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/scope-static-gen-meth-paramsbody-var-close.js-strict:true": "test/language/statements/class/scope-static-gen-meth-paramsbody-var-close.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/scope-static-gen-meth-paramsbody-var-open.js-strict:true": "test/language/statements/class/scope-static-gen-meth-paramsbody-var-open.js: ReferenceError: _callee is not defined <at omitted>",
  "test/language/statements/class/static-init-arguments-functions.js-strict:true": "test/language/statements/class/static-init-arguments-functions.js: SyntaxError: test/language/statements/class/static-init-arguments-functions.js: Unexpected token (21:9)\n  19 | \n  20 | class C {\n> 21 |   static {\n     |          ^\n  22 |     (function({test262 = fnParam = arguments}) {\n  23 |       fn = arguments;\n  24 |     })('function'); <at omitted>",
  "test/language/statements/class/static-init-arguments-methods.js-strict:true": "test/language/statements/class/static-init-arguments-methods.js: SyntaxError: test/language/statements/class/static-init-arguments-methods.js: Unexpected token (24:9)\n  22 | \n  23 | class C {\n> 24 |   static {\n     |          ^\n  25 |     instance = new class {\n  26 |       method({test262 = methodParam = arguments}) {\n  27 |         method = arguments; <at omitted>",
  "test/language/statements/class/static-init-await-binding-invalid.js-strict:true": "test/language/statements/class/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-length.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-length.js: Test262Error: Expected SameValue(«0», «2») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-name.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-name.js: Test262Error: Dynamic Functions are called anonymous Expected SameValue(«GeneratorFunctionPrototype», «anonymous») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-prototype.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/instance-prototype.js: Test262Error: prototype is a new ordinary object Expected SameValue(«4», «0») to be true <at omitted>",
  "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/regular-subclassing.js-strict:true": "test/language/statements/class/subclass/builtin-objects/GeneratorFunction/regular-subclassing.js: TypeError: Function.prototype.toString requires that 'this' be a Function <at omitted>",
  "test/language/statements/class/subclass/superclass-async-function.js-strict:true": "test/language/statements/class/subclass/superclass-async-function.js: TypeError: Cannot redefine property: prototype <at omitted>",
  "test/language/statements/class/subclass/superclass-generator-function.js-strict:true": "test/language/statements/class/subclass/superclass-generator-function.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/class/syntax/escaped-static.js-strict:true": "test/language/statements/class/syntax/escaped-static.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/const/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (61:10)\n  59 | };\n  60 | \n> 61 | const [...[,]] = g();\n     |           ^\n  62 | \n  63 | assert.sameValue(first, 1);\n  64 | assert.sameValue(second, 1); <at omitted>",
  "test/language/statements/const/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/const/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/const/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (45:10)\n  43 | }();\n  44 | \n> 45 | const [...[]] = iter;\n     |           ^\n  46 | \n  47 | assert.sameValue(iterations, 1);\n  48 |  <at omitted>",
  "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/const/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/const/fn-name-gen.js-strict:true": "test/language/statements/const/fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/const/static-init-await-binding-invalid.js-strict:true": "test/language/statements/const/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-in/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-in/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-in/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-elem-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-init-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-elem-init-yield-expr.js: Error: test/language/statements/for-of/dstr/array-elem-init-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-err.js: Error: test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-err.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-null.js: Error: test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-null.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-iter-rtrn-close.js: Error: test/language/statements/for-of/dstr/array-elem-iter-rtrn-close.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-nested-array-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-elem-nested-array-yield-expr.js: Error: test/language/statements/for-of/dstr/array-elem-nested-array-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-nested-obj-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-elem-nested-obj-yield-expr.js: Error: test/language/statements/for-of/dstr/array-elem-nested-obj-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-target-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-elem-target-yield-expr.js: Error: test/language/statements/for-of/dstr/array-elem-target-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-err.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-err.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-null.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-null.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close.js-strict:true": "test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close.js: Error: test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-before-elision.js-strict:true": "test/language/statements/for-of/dstr/array-rest-before-elision.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-rest-elision-invalid.js-strict:true": "test/language/statements/for-of/dstr/array-rest-elision-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-err.js-strict:true": "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-err.js: Error: test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-err.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-null.js-strict:true": "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-null.js: Error: test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-null.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close.js-strict:true": "test/language/statements/for-of/dstr/array-rest-iter-rtrn-close.js: Error: test/language/statements/for-of/dstr/array-rest-iter-rtrn-close.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-nested-array-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-array-yield-expr.js: Error: test/language/statements/for-of/dstr/array-rest-nested-array-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-nested-obj-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-rest-nested-obj-yield-expr.js: SyntaxError: test/language/statements/for-of/dstr/array-rest-nested-obj-yield-expr.js: Unexpected token (34:9)\n  32 | var counter = 0;\n  33 | \n> 34 | for ([...{ x = yield }] of [[{}]]) {\n     |          ^\n  35 |   \n  36 |   counter += 1;\n  37 | } <at omitted>",
  "test/language/statements/for-of/dstr/array-rest-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/array-rest-yield-expr.js: Error: test/language/statements/for-of/dstr/array-rest-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-elision.js: Unexpected token (82:15)\n  80 | var iterCount = 0;\n  81 | \n> 82 | for (const [...[,]] of [g()]) {\n     |                ^\n  83 |   assert.sameValue(first, 1);\n  84 |   assert.sameValue(second, 1);\n  85 |  <at omitted>",
  "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for-of/dstr/const-ary-ptrn-rest-ary-empty.js: Unexpected token (66:15)\n  64 | var iterCount = 0;\n  65 | \n> 66 | for (const [...[]] of [iter]) {\n     |                ^\n  67 |   assert.sameValue(iterations, 1);\n  68 | \n  69 |   iterCount += 1; <at omitted>",
  "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/const-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-elision.js: Unexpected token (82:13)\n  80 | var iterCount = 0;\n  81 | \n> 82 | for (let [...[,]] of [g()]) {\n     |              ^\n  83 |   assert.sameValue(first, 1);\n  84 |   assert.sameValue(second, 1);\n  85 |  <at omitted>",
  "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for-of/dstr/let-ary-ptrn-rest-ary-empty.js: Unexpected token (66:13)\n  64 | var iterCount = 0;\n  65 | \n> 66 | for (let [...[]] of [iter]) {\n     |              ^\n  67 |   assert.sameValue(iterations, 1);\n  68 | \n  69 |   iterCount += 1; <at omitted>",
  "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/let-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/dstr/obj-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/statements/for-of/dstr/obj-id-init-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/obj-id-init-yield-expr.js: Error: test/language/statements/for-of/dstr/obj-id-init-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-fn-name-gen.js: Test262Error: descriptor value should be gen <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-elem-init-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-init-yield-expr.js: Error: test/language/statements/for-of/dstr/obj-prop-elem-init-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-elem-target-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-elem-target-yield-expr.js: Error: test/language/statements/for-of/dstr/obj-prop-elem-target-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-nested-array-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-nested-array-yield-expr.js: Error: test/language/statements/for-of/dstr/obj-prop-nested-array-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-expr.js-strict:true": "test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-expr.js: Error: test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-expr.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-elision.js: Unexpected token (79:13)\n  77 | var iterCount = 0;\n  78 | \n> 79 | for (var [...[,]] of [g()]) {\n     |              ^\n  80 |   assert.sameValue(first, 1);\n  81 |   assert.sameValue(second, 1);\n  82 |  <at omitted>",
  "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for-of/dstr/var-ary-ptrn-rest-ary-empty.js: Unexpected token (63:13)\n  61 | var iterCount = 0;\n  62 | \n> 63 | for (var [...[]] of [iter]) {\n     |              ^\n  64 |   assert.sameValue(iterations, 1);\n  65 | \n  66 |   iterCount += 1; <at omitted>",
  "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for-of/dstr/var-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for-of/escaped-of.js-strict:true": "test/language/statements/for-of/escaped-of.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-decl-no-expr.js-strict:true": "test/language/statements/for-of/head-decl-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-expr-no-expr.js-strict:true": "test/language/statements/for-of/head-expr-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-lhs-async-invalid.js-strict:true": "test/language/statements/for-of/head-lhs-async-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/head-var-no-expr.js-strict:true": "test/language/statements/for-of/head-var-no-expr.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/for-of/yield-from-catch.js-strict:true": "test/language/statements/for-of/yield-from-catch.js: Error: test/language/statements/for-of/yield-from-catch.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-from-finally.js-strict:true": "test/language/statements/for-of/yield-from-finally.js: Error: test/language/statements/for-of/yield-from-finally.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-from-try.js-strict:true": "test/language/statements/for-of/yield-from-try.js: Error: test/language/statements/for-of/yield-from-try.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-star-from-catch.js-strict:true": "test/language/statements/for-of/yield-star-from-catch.js: Error: test/language/statements/for-of/yield-star-from-catch.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-star-from-finally.js-strict:true": "test/language/statements/for-of/yield-star-from-finally.js: Error: test/language/statements/for-of/yield-star-from-finally.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-star-from-try.js-strict:true": "test/language/statements/for-of/yield-star-from-try.js: Error: test/language/statements/for-of/yield-star-from-try.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield-star.js-strict:true": "test/language/statements/for-of/yield-star.js: Error: test/language/statements/for-of/yield-star.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for-of/yield.js-strict:true": "test/language/statements/for-of/yield.js: Error: test/language/statements/for-of/yield.js: unknown Statement of type \"ForOfStatement\" <at omitted>",
  "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-ary-elision.js: Unexpected token (82:15)\n  80 | var iterCount = 0;\n  81 | \n> 82 | for (const [...[,]] = g(); iterCount < 1; ) {\n     |                ^\n  83 |   assert.sameValue(first, 1);\n  84 |   assert.sameValue(second, 1);\n  85 |  <at omitted>",
  "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for/dstr/const-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for/dstr/const-ary-ptrn-rest-ary-empty.js: Unexpected token (66:15)\n  64 | var iterCount = 0;\n  65 | \n> 66 | for (const [...[]] = iter; iterCount < 1; ) {\n     |                ^\n  67 |   assert.sameValue(iterations, 1);\n  68 | \n  69 |   iterCount += 1; <at omitted>",
  "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/const-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-ary-elision.js: Unexpected token (82:13)\n  80 | var iterCount = 0;\n  81 | \n> 82 | for (let [...[,]] = g(); iterCount < 1; ) {\n     |              ^\n  83 |   assert.sameValue(first, 1);\n  84 |   assert.sameValue(second, 1);\n  85 |  <at omitted>",
  "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for/dstr/let-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for/dstr/let-ary-ptrn-rest-ary-empty.js: Unexpected token (66:13)\n  64 | var iterCount = 0;\n  65 | \n> 66 | for (let [...[]] = iter; iterCount < 1; ) {\n     |              ^\n  67 |   assert.sameValue(iterations, 1);\n  68 | \n  69 |   iterCount += 1; <at omitted>",
  "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/let-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-ary-elision.js: Unexpected token (76:13)\n  74 | var iterCount = 0;\n  75 | \n> 76 | for (var [...[,]] = g(); iterCount < 1; ) {\n     |              ^\n  77 |   assert.sameValue(first, 1);\n  78 |   assert.sameValue(second, 1);\n  79 |   iterCount += 1; <at omitted>",
  "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/for/dstr/var-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/for/dstr/var-ary-ptrn-rest-ary-empty.js: Unexpected token (60:13)\n  58 | var iterCount = 0;\n  59 | \n> 60 | for (var [...[]] = iter; iterCount < 1; ) {\n     |              ^\n  61 |   assert.sameValue(iterations, 1);\n  62 |   iterCount += 1;\n  63 | } <at omitted>",
  "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/for/dstr/var-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/function/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (84:15)\n  82 | \n  83 | var callCount = 0;\n> 84 | function f([...[,]]) {\n     |                ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/statements/function/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/function/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/function/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (68:15)\n  66 | \n  67 | var callCount = 0;\n> 68 | function f([...[]]) {\n     |                ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (84:15)\n  82 | \n  83 | var callCount = 0;\n> 84 | function f([...[,]] = g()) {\n     |                ^\n  85 |   assert.sameValue(first, 1);\n  86 |   assert.sameValue(second, 1);\n  87 |   callCount = callCount + 1; <at omitted>",
  "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/function/dstr/dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (68:15)\n  66 | \n  67 | var callCount = 0;\n> 68 | function f([...[]] = iter) {\n     |                ^\n  69 |   assert.sameValue(iterations, 1);\n  70 |   callCount = callCount + 1;\n  71 | }; <at omitted>",
  "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/function/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/function/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/function/static-init-await-binding-invalid.js-strict:true": "test/language/statements/function/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/generators/cptn-decl.js-strict:true": "test/language/statements/generators/cptn-decl.js: SyntaxError: SyntaxError: <eval>: Line 1:9 Unexpected token * (and 6 more errors) <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-ary-elem.js: Unexpected token (76:16)\n  74 | \n  75 | var callCount = 0;\n> 76 | function* f([...[x, y, z]]) {\n     |                 ^\n  77 |   assert.sameValue(x, 3);\n  78 |   assert.sameValue(y, 4);\n  79 |   assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (83:16)\n  81 | \n  82 | var callCount = 0;\n> 83 | function* f([...[,]]) {\n     |                 ^\n  84 |   assert.sameValue(first, 1);\n  85 |   assert.sameValue(second, 1);\n  86 |   callCount = callCount + 1; <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (67:16)\n  65 | \n  66 | var callCount = 0;\n> 67 | function* f([...[]]) {\n     |                 ^\n  68 |   assert.sameValue(iterations, 1);\n  69 |   callCount = callCount + 1;\n  70 | }; <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-ary-rest.js: Unexpected token (57:16)\n  55 | \n  56 | var callCount = 0;\n> 57 | function* f([...[...x]]) {\n     |                 ^\n  58 |   assert(Array.isArray(x));\n  59 |   assert.sameValue(x.length, 3);\n  60 |   assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-obj-id.js: Unexpected token (56:16)\n  54 | \n  55 | var callCount = 0;\n> 56 | function* f([...{ length }]) {\n     |                 ^\n  57 |   assert.sameValue(length, 3);\n  58 |   callCount = callCount + 1;\n  59 | }; <at omitted>",
  "test/language/statements/generators/dstr/ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/generators/dstr/ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/generators/dstr/ary-ptrn-rest-obj-prop-id.js: Unexpected token (57:16)\n  55 | \n  56 | var callCount = 0;\n> 57 | function* f([...{ 0: v, 1: w, 2: x, 3: y, length: z }]) {\n     |                 ^\n  58 |   assert.sameValue(v, 7);\n  59 |   assert.sameValue(w, 8);\n  60 |   assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elem.js: Unexpected token (76:16)\n  74 | \n  75 | var callCount = 0;\n> 76 | function* f([...[x, y, z]] = [3, 4, 5]) {\n     |                 ^\n  77 |   assert.sameValue(x, 3);\n  78 |   assert.sameValue(y, 4);\n  79 |   assert.sameValue(z, 5); <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-elision.js: Unexpected token (83:16)\n  81 | \n  82 | var callCount = 0;\n> 83 | function* f([...[,]] = g()) {\n     |                 ^\n  84 |   assert.sameValue(first, 1);\n  85 |   assert.sameValue(second, 1);\n  86 |   callCount = callCount + 1; <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-empty.js: Unexpected token (67:16)\n  65 | \n  66 | var callCount = 0;\n> 67 | function* f([...[]] = iter) {\n     |                 ^\n  68 |   assert.sameValue(iterations, 1);\n  69 |   callCount = callCount + 1;\n  70 | }; <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-ary-rest.js: Unexpected token (57:16)\n  55 | \n  56 | var callCount = 0;\n> 57 | function* f([...[...x]] = values) {\n     |                 ^\n  58 |   assert(Array.isArray(x));\n  59 |   assert.sameValue(x.length, 3);\n  60 |   assert.sameValue(x[0], 1); <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-id.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-id.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-id.js: Unexpected token (56:16)\n  54 | \n  55 | var callCount = 0;\n> 56 | function* f([...{ length }] = [1, 2, 3]) {\n     |                 ^\n  57 |   assert.sameValue(length, 3);\n  58 |   callCount = callCount + 1;\n  59 | }; <at omitted>",
  "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js-strict:true": "test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: SyntaxError: test/language/statements/generators/dstr/dflt-ary-ptrn-rest-obj-prop-id.js: Unexpected token (57:16)\n  55 | \n  56 | var callCount = 0;\n> 57 | function* f([...{ 0: v, 1: w, 2: x, 3: y, length: z }] = [7, 8, 9]) {\n     |                 ^\n  58 |   assert.sameValue(v, 7);\n  59 |   assert.sameValue(w, 8);\n  60 |   assert.sameValue(x, 9); <at omitted>",
  "test/language/statements/generators/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/generators/dstr/dflt-obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-getter.js-strict:true": "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/generators/dstr/dflt-obj-ptrn-rest-getter.js: Unexpected token (45:13)\n  43 | \n  44 | var callCount = 0;\n> 45 | function* f({...x} = { get v() { count++; return 2; } }) {\n     |              ^\n  46 |   assert.sameValue(count, 1);\n  47 | \n  48 |   verifyProperty(x, \"v\", { <at omitted>",
  "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/generators/dstr/dflt-obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (46:13)\n  44 | \n  45 | var callCount = 0;\n> 46 | function* f({...rest} = o) {\n     |              ^\n  47 |   assert.sameValue(rest.x, undefined);\n  48 | \n  49 |   verifyProperty(rest, \"a\", { <at omitted>",
  "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/generators/dstr/dflt-obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/generators/dstr/dflt-obj-ptrn-rest-val-obj.js: Unexpected token (44:19)\n  42 | \n  43 | var callCount = 0;\n> 44 | function* f({a, b, ...rest} = {x: 1, y: 2, a: 5, b: 3}) {\n     |                    ^\n  45 |   assert.sameValue(rest.a, undefined);\n  46 |   assert.sameValue(rest.b, undefined);\n  47 |  <at omitted>",
  "test/language/statements/generators/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/generators/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/generators/dstr/obj-ptrn-rest-getter.js-strict:true": "test/language/statements/generators/dstr/obj-ptrn-rest-getter.js: SyntaxError: test/language/statements/generators/dstr/obj-ptrn-rest-getter.js: Unexpected token (45:13)\n  43 | \n  44 | var callCount = 0;\n> 45 | function* f({...x}) {\n     |              ^\n  46 |   assert.sameValue(count, 1);\n  47 | \n  48 |   verifyProperty(x, \"v\", { <at omitted>",
  "test/language/statements/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js-strict:true": "test/language/statements/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js: SyntaxError: test/language/statements/generators/dstr/obj-ptrn-rest-skip-non-enumerable.js: Unexpected token (46:13)\n  44 | \n  45 | var callCount = 0;\n> 46 | function* f({...rest}) {\n     |              ^\n  47 |   assert.sameValue(rest.x, undefined);\n  48 | \n  49 |   verifyProperty(rest, \"a\", { <at omitted>",
  "test/language/statements/generators/dstr/obj-ptrn-rest-val-obj.js-strict:true": "test/language/statements/generators/dstr/obj-ptrn-rest-val-obj.js: SyntaxError: test/language/statements/generators/dstr/obj-ptrn-rest-val-obj.js: Unexpected token (44:19)\n  42 | \n  43 | var callCount = 0;\n> 44 | function* f({a, b, ...rest}) {\n     |                    ^\n  45 |   assert.sameValue(rest.a, undefined);\n  46 |   assert.sameValue(rest.b, undefined);\n  47 |  <at omitted>",
  "test/language/statements/generators/invoke-as-constructor.js-strict:true": "test/language/statements/generators/invoke-as-constructor.js: Test262Error: Expected a TypeError to be thrown but no exception was thrown at all <at omitted>",
  "test/language/statements/generators/params-dflt-ref-arguments.js-strict:true": "test/language/statements/generators/params-dflt-ref-arguments.js: ReferenceError: _args is not defined <at omitted>",
  "test/language/statements/generators/yield-spread-arr-multiple.js-strict:true": "test/language/statements/generators/yield-spread-arr-multiple.js: Error: test/language/statements/generators/yield-spread-arr-multiple.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/statements/generators/yield-spread-arr-single.js-strict:true": "test/language/statements/generators/yield-spread-arr-single.js: Error: test/language/statements/generators/yield-spread-arr-single.js: Expected type \"Expression\" with option {} <at omitted>",
  "test/language/statements/generators/yield-spread-obj.js-strict:true": "test/language/statements/generators/yield-spread-obj.js: SyntaxError: test/language/statements/generators/yield-spread-obj.js: Unexpected token (30:6)\n  28 |   callCount += 1;\n  29 |   yield {\n> 30 |       ...yield,\n     |       ^\n  31 |       y: 1,\n  32 |       ...yield yield,\n  33 |     }; <at omitted>",
  "test/language/statements/labeled/static-init-invalid-await.js-strict:true": "test/language/statements/labeled/static-init-invalid-await.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-await-module-escaped.js-strict:true": "test/language/statements/labeled/value-await-module-escaped.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/labeled/value-await-module.js-strict:true": "test/language/statements/labeled/value-await-module.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/let/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (61:8)\n  59 | };\n  60 | \n> 61 | let [...[,]] = g();\n     |         ^\n  62 | \n  63 | assert.sameValue(first, 1);\n  64 | assert.sameValue(second, 1); <at omitted>",
  "test/language/statements/let/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/let/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/let/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (45:8)\n  43 | }();\n  44 | \n> 45 | let [...[]] = iter;\n     |         ^\n  46 | \n  47 | assert.sameValue(iterations, 1);\n  48 |  <at omitted>",
  "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/let/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/let/fn-name-gen.js-strict:true": "test/language/statements/let/fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/let/static-init-await-binding-invalid.js-strict:true": "test/language/statements/let/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/switch/scope-lex-async-generator.js-strict:true": "test/language/statements/switch/scope-lex-async-generator.js: error SyntaxError: test/language/statements/switch/scope-lex-async-generator.js: Unexpected token (22:37)\n  20 | ---*/\n  21 | \n> 22 | switch (0) { default: async function * x() {} }\n     |                                      ^\n  23 | x;\n  24 |  at <internal/k6/compiler/lib/babel.min.js>:2:28536(100) happened <at omitted>",
  "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/try/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (63:13)\n  61 | try {\n  62 |   throw g();\n> 63 | } catch ([...[,]]) {\n     |              ^\n  64 |   assert.sameValue(first, 1);\n  65 |   assert.sameValue(second, 1);\n  66 |   ranCatch = true; <at omitted>",
  "test/language/statements/try/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/try/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/try/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (47:13)\n  45 | try {\n  46 |   throw iter;\n> 47 | } catch ([...[]]) {\n     |              ^\n  48 |   assert.sameValue(iterations, 1);\n  49 |   ranCatch = true;\n  50 | } <at omitted>",
  "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/try/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/try/static-init-await-binding-invalid.js-strict:true": "test/language/statements/try/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-gen.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/variable/dstr/ary-ptrn-elem-id-static-init-await-invalid.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-elem-id-static-init-await-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/variable/dstr/ary-ptrn-rest-ary-elision.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-ary-elision.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-ary-elision.js: Unexpected token (60:8)\n  58 | };\n  59 | \n> 60 | var [...[,]] = g();\n     |         ^\n  61 | \n  62 | assert.sameValue(first, 1);\n  63 | assert.sameValue(second, 1); <at omitted>",
  "test/language/statements/variable/dstr/ary-ptrn-rest-ary-empty.js-strict:true": "test/language/statements/variable/dstr/ary-ptrn-rest-ary-empty.js: SyntaxError: test/language/statements/variable/dstr/ary-ptrn-rest-ary-empty.js: Unexpected token (44:8)\n  42 | }();\n  43 | \n> 44 | var [...[]] = iter;\n     |         ^\n  45 | \n  46 | assert.sameValue(iterations, 1);\n  47 |  <at omitted>",
  "test/language/statements/variable/dstr/obj-ptrn-elem-id-static-init-await-invalid.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-elem-id-static-init-await-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-gen.js-strict:true": "test/language/statements/variable/dstr/obj-ptrn-id-init-fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/variable/fn-name-gen.js-strict:true": "test/language/statements/variable/fn-name-gen.js: Test262Error: Expected SameValue(«_callee», «gen») to be true <at omitted>",
  "test/language/statements/variable/static-init-await-binding-invalid.js-strict:true": "test/language/statements/variable/static-init-await-binding-invalid.js: error is not an object (Test262: This statement should not be evaluated.)",
  "test/language/white-space/mongolian-vowel-separator.js-strict:true": "test/language/white-space/mongolian-vowel-separator.js: error is not an object (Test262: This statement should not be evaluated.)"
}
